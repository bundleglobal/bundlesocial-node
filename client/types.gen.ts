// This file is auto-generated by @hey-api/openapi-ts

export type AppGetHealthResponse = {
    status: string;
    createdAt: string;
};

export type OrganizationGetOrganizationResponse = {
    id: string;
    createdById: string;
    promotionCodeId?: string | null;
    name?: string | null;
    avatarUrl?: string | null;
    apiAccess?: boolean;
    ref?: string | null;
    dailyPostLimit?: {
        TWITTER?: number;
        FACEBOOK?: number;
        INSTAGRAM?: number;
        LINKEDIN?: number;
        YOUTUBE?: number;
        TIKTOK?: number;
        THREADS?: number;
        PINTEREST?: number;
        REDDIT?: number;
        DISCORD?: number;
        SLACK?: number;
        MASTODON?: number;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
    teams: Array<{
        id: string;
        name: string;
        avatarUrl?: string | null;
        organizationId: string;
        createdById: string;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    }>;
    createdBy: {
        id: string;
        externalId: string;
        email: string;
        emailVerified?: string | null;
        firstName?: string | null;
        lastName?: string | null;
        avatarUrl?: string | null;
        role: 'ADMIN' | 'CUSTOMER';
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    };
    subscription?: {
        id: string;
        organizationId: string;
        couponId?: string | null;
        promotionCodeId?: string | null;
        stripeSubscriptionId: string;
        stripeSubscriptionItems?: Array<{
            id: string;
            price: string;
            quantity: number;
        }> | null;
        status: 'trialing' | 'active' | 'canceled' | 'incomplete' | 'incomplete_expired' | 'past_due' | 'unpaid' | 'paused';
        metadata?: unknown;
        stripePriceId: string;
        tier: 'PRO' | 'BUSINESS';
        cancelAtPeriodEnd: boolean;
        created: string | null;
        currentPeriodStart: string | null;
        currentPeriodEnd: string | null;
        endedAt?: string | null;
        cancelAt?: string | null;
        canceledAt?: string | null;
        trialStart?: string | null;
        trialEnd?: string | null;
        maxMonthlyPosts: number;
        discountStart?: string | null;
        discountEnd?: string | null;
        createdAt: string | null;
        updatedAt: string | null;
        coupon?: {
            id: string;
            name?: string | null;
            amountOff?: number | null;
            percentOff?: number | null;
            duration: 'forever' | 'once' | 'repeating';
            durationInMonths?: number | null;
            maxRedemptions?: number | null;
            valid: boolean;
            createdAt: string | null;
            updatedAt: string | null;
            promotionCodes: Array<{
                id: string;
                couponId: string;
                code: string;
                active: boolean;
                expiresAt?: string | null;
                maxRedemptions?: number | null;
                firstTimeTransaction: boolean;
                minimumAmount?: number | null;
                createdAt: string | null;
                updatedAt: string | null;
            }>;
        } | null;
        promotionCode?: {
            id: string;
            couponId: string;
            code: string;
            active: boolean;
            expiresAt?: string | null;
            maxRedemptions?: number | null;
            firstTimeTransaction: boolean;
            minimumAmount?: number | null;
            createdAt: string | null;
            updatedAt: string | null;
            coupon: {
                id: string;
                name?: string | null;
                amountOff?: number | null;
                percentOff?: number | null;
                duration: 'forever' | 'once' | 'repeating';
                durationInMonths?: number | null;
                maxRedemptions?: number | null;
                valid: boolean;
                createdAt: string | null;
                updatedAt: string | null;
            };
        } | null;
    } | null;
    promotionCode?: {
        id: string;
        couponId: string;
        code: string;
        active: boolean;
        expiresAt?: string | null;
        maxRedemptions?: number | null;
        firstTimeTransaction: boolean;
        minimumAmount?: number | null;
        createdAt: string | null;
        updatedAt: string | null;
        coupon: {
            id: string;
            name?: string | null;
            amountOff?: number | null;
            percentOff?: number | null;
            duration: 'forever' | 'once' | 'repeating';
            durationInMonths?: number | null;
            maxRedemptions?: number | null;
            valid: boolean;
            createdAt: string | null;
            updatedAt: string | null;
        };
    } | null;
    usage: {
        monthlyPosts: number;
    };
};

export type TeamGetTeamData = {
    id: string;
};

export type TeamGetTeamResponse = {
    id: string;
    name: string;
    avatarUrl?: string | null;
    organizationId: string;
    createdById: string;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
    organization: {
        id: string;
        createdById: string;
        promotionCodeId?: string | null;
        name?: string | null;
        avatarUrl?: string | null;
        apiAccess?: boolean;
        ref?: string | null;
        dailyPostLimit?: {
            TWITTER?: number;
            FACEBOOK?: number;
            INSTAGRAM?: number;
            LINKEDIN?: number;
            YOUTUBE?: number;
            TIKTOK?: number;
            THREADS?: number;
            PINTEREST?: number;
            REDDIT?: number;
            DISCORD?: number;
            SLACK?: number;
            MASTODON?: number;
        } | null;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    };
    createdBy: {
        id: string;
        externalId: string;
        email: string;
        emailVerified?: string | null;
        firstName?: string | null;
        lastName?: string | null;
        avatarUrl?: string | null;
        role: 'ADMIN' | 'CUSTOMER';
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    };
    bots: Array<{
        id: string;
        name: string;
        avatarUrl?: string | null;
        teamId: string;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    }>;
    socialAccounts: Array<{
        id: string;
        type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
        teamId: string;
        username?: string | null;
        displayName?: string | null;
        externalId?: string | null;
        userUsername?: string | null;
        userDisplayName?: string | null;
        userId?: string | null;
        channels?: Array<{
            id: string;
            name?: string | null;
            username?: string | null;
            webhook?: {
                id?: string | null;
                name?: string | null;
                avatar?: string | null;
                url?: string | null;
            } | null;
        }> | null;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    }>;
    bio?: {
        id: string;
        username: string;
        name: string | null;
        description: string | null;
        avatarUrl: string | null;
        socials: {
            [key: string]: (string | null);
        } | null;
        teamId: string;
        createdAt: string | null;
        updatedAt: string | null;
        items: Array<{
            id: string;
            bioId: string;
            name: string;
            link: string;
            icon?: string | null;
            enabled: boolean;
            order?: number | null;
            createdAt: string | null;
            updatedAt: string | null;
            analytics: Array<{
                id: string;
                count: number;
                bioItemId: string;
                deviceType: {
                    [key: string]: (number);
                };
                country: {
                    [key: string]: (number);
                };
                createdAt: string | null;
                updatedAt: string | null;
            }>;
        }>;
    } | null;
};

export type TeamUpdateTeamData = {
    id: string;
    /**
     * Body
     */
    requestBody?: {
        name?: string;
        avatarUrl?: string | null;
    };
};

export type TeamUpdateTeamResponse = {
    id: string;
    name: string;
    avatarUrl?: string | null;
    organizationId: string;
    createdById: string;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type TeamDeleteTeamData = {
    id: string;
};

export type TeamDeleteTeamResponse = {
    id: string;
    name: string;
    avatarUrl?: string | null;
    organizationId: string;
    createdById: string;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type TeamCreateTeamData = {
    /**
     * Body
     */
    requestBody?: {
        name: string;
        avatarUrl?: string | null;
    };
};

export type TeamCreateTeamResponse = {
    id: string;
    name: string;
    avatarUrl?: string | null;
    organizationId: string;
    createdById: string;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type SocialAccountConnectData = {
    /**
     * Body
     */
    requestBody?: {
        type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
        teamId: string;
        redirectUrl: string;
        /**
         * Mastodon only
         */
        serverUrl?: string;
    };
};

export type SocialAccountConnectResponse = {
    /**
     * OAuth URL - Redirect user to this URL to connect social account
     */
    url: string;
};

export type SocialAccountDisconnectData = {
    /**
     * Body
     */
    requestBody?: {
        type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
        teamId: string;
    };
};

export type SocialAccountDisconnectResponse = {
    id: string;
    type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
    teamId: string;
    username?: string | null;
    displayName?: string | null;
    externalId?: string | null;
    userUsername?: string | null;
    userDisplayName?: string | null;
    userId?: string | null;
    channels?: Array<{
        id: string;
        name?: string | null;
        username?: string | null;
        webhook?: {
            id?: string | null;
            name?: string | null;
            avatar?: string | null;
            url?: string | null;
        } | null;
    }> | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type SocialAccountSetChannelData = {
    /**
     * Body
     */
    requestBody?: {
        type: 'FACEBOOK' | 'INSTAGRAM' | 'LINKEDIN' | 'YOUTUBE';
        teamId: string;
        channelId: string;
    };
};

export type SocialAccountSetChannelResponse = {
    id: string;
    type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
    teamId: string;
    username?: string | null;
    displayName?: string | null;
    externalId?: string | null;
    userUsername?: string | null;
    userDisplayName?: string | null;
    userId?: string | null;
    channels?: Array<{
        id: string;
        name?: string | null;
        username?: string | null;
        webhook?: {
            id?: string | null;
            name?: string | null;
            avatar?: string | null;
            url?: string | null;
        } | null;
    }> | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type SocialAccountRefreshChannelsData = {
    /**
     * Body
     */
    requestBody?: {
        type: 'DISCORD' | 'SLACK' | 'REDDIT' | 'PINTEREST';
        teamId: string;
    };
};

export type SocialAccountRefreshChannelsResponse = {
    id: string;
    type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
    teamId: string;
    username?: string | null;
    displayName?: string | null;
    externalId?: string | null;
    userUsername?: string | null;
    userDisplayName?: string | null;
    userId?: string | null;
    channels?: Array<{
        id: string;
        name?: string | null;
        username?: string | null;
        webhook?: {
            id?: string | null;
            name?: string | null;
            avatar?: string | null;
            url?: string | null;
        } | null;
    }> | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type SocialAccountCreatePortalLinkData = {
    /**
     * Body
     */
    requestBody?: {
        teamId: string;
        redirectUrl: string;
        socialAccountTypes: Array<('TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK')>;
        logoUrl?: string;
        userLogoUrl?: string;
        userName?: string;
    };
};

export type SocialAccountCreatePortalLinkResponse = {
    url: string;
};

export type UploadGetListData = {
    teamId: string;
};

export type UploadGetListResponse = Array<{
    id: string;
    teamId: string;
    expiresAt?: string | null;
    iconUrl?: string | null;
    thumbnailUrl?: string | null;
    url?: string | null;
    iconPath?: string | null;
    thumbnailPath?: string | null;
    path?: string | null;
    type: 'image' | 'video';
    width?: number | null;
    height?: number | null;
    fileSize?: number | null;
    videoLength?: number | null;
    mime?: string | null;
    ext?: string | null;
    createdAt: string | null;
    updatedAt: string | null;
    posts: Array<{
        postId: string;
        uploadId: string;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    }>;
}>;

export type UploadCreateData = {
    /**
     * Body
     */
    formData?: {
        teamId: string;
        file?: (Blob | File) | null;
    };
};

export type UploadCreateResponse = {
    id: string;
    teamId: string;
    expiresAt?: string | null;
    iconUrl?: string | null;
    thumbnailUrl?: string | null;
    url?: string | null;
    iconPath?: string | null;
    thumbnailPath?: string | null;
    path?: string | null;
    type: 'image' | 'video';
    width?: number | null;
    height?: number | null;
    fileSize?: number | null;
    videoLength?: number | null;
    mime?: string | null;
    ext?: string | null;
    createdAt: string | null;
    updatedAt: string | null;
};

export type UploadDeleteManyData = {
    /**
     * Body
     */
    requestBody?: {
        ids: Array<(string)>;
    };
};

export type UploadDeleteManyResponse = Array<{
    id: string;
    teamId: string;
    expiresAt?: string | null;
    iconUrl?: string | null;
    thumbnailUrl?: string | null;
    url?: string | null;
    iconPath?: string | null;
    thumbnailPath?: string | null;
    path?: string | null;
    type: 'image' | 'video';
    width?: number | null;
    height?: number | null;
    fileSize?: number | null;
    videoLength?: number | null;
    mime?: string | null;
    ext?: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}>;

export type UploadGetData = {
    id: string;
};

export type UploadGetResponse = {
    id: string;
    teamId: string;
    expiresAt?: string | null;
    iconUrl?: string | null;
    thumbnailUrl?: string | null;
    url?: string | null;
    iconPath?: string | null;
    thumbnailPath?: string | null;
    path?: string | null;
    type: 'image' | 'video';
    width?: number | null;
    height?: number | null;
    fileSize?: number | null;
    videoLength?: number | null;
    mime?: string | null;
    ext?: string | null;
    createdAt: string | null;
    updatedAt: string | null;
};

export type UploadDeleteData = {
    id: string;
};

export type UploadDeleteResponse = {
    id: string;
    teamId: string;
    expiresAt?: string | null;
    iconUrl?: string | null;
    thumbnailUrl?: string | null;
    url?: string | null;
    iconPath?: string | null;
    thumbnailPath?: string | null;
    path?: string | null;
    type: 'image' | 'video';
    width?: number | null;
    height?: number | null;
    fileSize?: number | null;
    videoLength?: number | null;
    mime?: string | null;
    ext?: string | null;
    createdAt: string | null;
    updatedAt: string | null;
};

export type PostGetData = {
    id: string;
};

export type PostGetResponse = {
    id: string;
    teamId: string;
    title: string;
    postDate: string | null;
    postedDate?: string | null;
    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    data: {
        TWITTER?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        PINTEREST?: {
            text?: string | null;
            description?: string | null;
            boardName: string;
            uploadIds?: Array<(string)> | null;
            /**
             * The URL to which the Pin will link to.
             */
            link?: string | null;
            /**
             * The alt text for the image. This is used by screen readers and when the image can't be loaded.
             */
            altText?: string | null;
            /**
             * A note about the Pin. This is not visible to the public.
             */
            note?: string | null;
            /**
             * The dominant color of the image. This is used to display the image before it's loaded.
             */
            dominantColor?: string | null;
        } | null;
        FACEBOOK?: {
            type?: 'POST' | 'REEL' | 'STORY';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        INSTAGRAM?: {
            type?: 'POST' | 'REEL' | 'STORY';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        THREADS?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        TIKTOK?: {
            type?: 'VIDEO' | 'IMAGE';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
            /**
             * Set to true if the video is a paid partnership to promote a third-party business.
             */
            isBrandContent?: boolean | null;
            /**
             * Set to true if this video is promoting the creator's own business.
             */
            isOrganicBrandContent?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make comments on this post.
             */
            disableComments?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make Stitches using this post.
             */
            disableDuet?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make Duets using this post.
             */
            disableStitch?: boolean | null;
            /**
             * Choose a frame of the published video as the cover photo in ms
             */
            thumbnailOffset?: number | null;
            /**
             * Set to true if this video is AI generated.
             */
            isAiGenerated?: boolean | null;
        } | null;
        LINKEDIN?: {
            text: string;
            uploadIds?: Array<(string)> | null;
            privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
            /**
             * Set to true if the post shouldn't be displayed in the main feed.
             */
            hideFromFeed?: boolean | null;
            /**
             * Set to true if the post is not allowed to be reshared.
             */
            disableReshare?: boolean | null;
        } | null;
        YOUTUBE?: {
            type?: 'VIDEO' | 'SHORT';
            uploadIds?: Array<(string)> | null;
            text?: string | null;
            description?: string | null;
            privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
            /**
             * Set to true if the video is made for kids.
             */
            madeForKids?: boolean | null;
        } | null;
        REDDIT?: {
            /**
             * Subreddit name. Example: r/subredditName or u/username
             */
            sr: string;
            text: string;
            description?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The URL to which the post will link to.
             */
            link?: string | null;
            /**
             * Set to true if the post is NSFW.
             */
            nsfw?: boolean | null;
        } | null;
        DISCORD?: {
            channelId: string;
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The username to display as the author of the message.
             */
            username?: string | null;
            /**
             * Avatar url to display as the author of the message.
             */
            avatarUrl?: string | null;
        } | null;
        SLACK?: {
            channelId: string;
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The username to display as the author of the message.
             */
            username?: string | null;
            /**
             * Avatar url to display as the author of the message.
             */
            avatarUrl?: string | null;
        } | null;
        MASTODON?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
            spoiler?: string | null;
        } | null;
    };
    error?: string | null;
    errors?: {
        TWITTER?: string | null;
        PINTEREST?: string | null;
        FACEBOOK?: string | null;
        INSTAGRAM?: string | null;
        TIKTOK?: string | null;
        LINKEDIN?: string | null;
        REDDIT?: string | null;
        DISCORD?: string | null;
        SLACK?: string | null;
        YOUTUBE?: string | null;
        MASTODON?: string | null;
        THREADS?: string | null;
    } | null;
    externalData?: {
        TWITTER?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        PINTEREST?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        FACEBOOK?: {
            id?: string | null;
            postId?: string | null;
            videoId?: string | null;
            permalink?: string | null;
        } | null;
        INSTAGRAM?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        TIKTOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        LINKEDIN?: {
            id?: string | null;
            activity?: string | null;
            permalink?: string | null;
        } | null;
        REDDIT?: {
            id?: string | null;
            permalink?: string | null;
            subreddit_name?: string | null;
        } | null;
        DISCORD?: {
            id?: string | null;
            permalink?: string | null;
            channelId?: string | null;
        } | null;
        SLACK?: {
            id?: string | null;
            permalink?: string | null;
            channelId?: string | null;
        } | null;
        YOUTUBE?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        MASTODON?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        THREADS?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
    uploads: Array<{
        postId: string;
        uploadId: string;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
        upload: {
            id: string;
            teamId: string;
            expiresAt?: string | null;
            iconUrl?: string | null;
            thumbnailUrl?: string | null;
            url?: string | null;
            iconPath?: string | null;
            thumbnailPath?: string | null;
            path?: string | null;
            type: 'image' | 'video';
            width?: number | null;
            height?: number | null;
            fileSize?: number | null;
            videoLength?: number | null;
            mime?: string | null;
            ext?: string | null;
            createdAt: string | null;
            updatedAt: string | null;
        };
    }>;
    socialAccounts: Array<{
        postId: string;
        socialAccountId: string;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
        socialAccount: {
            id: string;
            type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
            teamId: string;
            username?: string | null;
            displayName?: string | null;
            externalId?: string | null;
            userUsername?: string | null;
            userDisplayName?: string | null;
            userId?: string | null;
            channels?: Array<{
                id: string;
                name?: string | null;
                username?: string | null;
                webhook?: {
                    id?: string | null;
                    name?: string | null;
                    avatar?: string | null;
                    url?: string | null;
                } | null;
            }> | null;
            createdAt: string | null;
            updatedAt: string | null;
            deletedAt?: string | null;
        };
    }>;
};

export type PostUpdateData = {
    id: string;
    /**
     * Body
     */
    requestBody?: {
        title?: string;
        postDate?: string;
        status?: 'DRAFT' | 'SCHEDULED';
        socialAccountTypes?: Array<('TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK')>;
        data?: {
            TWITTER?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            PINTEREST?: {
                text?: string | null;
                description?: string | null;
                boardName: string;
                uploadIds?: Array<(string)> | null;
                /**
                 * The URL to which the Pin will link to.
                 */
                link?: string | null;
                /**
                 * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                 */
                altText?: string | null;
                /**
                 * A note about the Pin. This is not visible to the public.
                 */
                note?: string | null;
                /**
                 * The dominant color of the image. This is used to display the image before it's loaded.
                 */
                dominantColor?: string | null;
            } | null;
            FACEBOOK?: {
                type?: 'POST' | 'REEL' | 'STORY';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            INSTAGRAM?: {
                type?: 'POST' | 'REEL' | 'STORY';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            THREADS?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            TIKTOK?: {
                type?: 'VIDEO' | 'IMAGE';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                /**
                 * Set to true if the video is a paid partnership to promote a third-party business.
                 */
                isBrandContent?: boolean | null;
                /**
                 * Set to true if this video is promoting the creator's own business.
                 */
                isOrganicBrandContent?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make comments on this post.
                 */
                disableComments?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                 */
                disableDuet?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make Duets using this post.
                 */
                disableStitch?: boolean | null;
                /**
                 * Choose a frame of the published video as the cover photo in ms
                 */
                thumbnailOffset?: number | null;
                /**
                 * Set to true if this video is AI generated.
                 */
                isAiGenerated?: boolean | null;
            } | null;
            LINKEDIN?: {
                text: string;
                uploadIds?: Array<(string)> | null;
                privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                /**
                 * Set to true if the post shouldn't be displayed in the main feed.
                 */
                hideFromFeed?: boolean | null;
                /**
                 * Set to true if the post is not allowed to be reshared.
                 */
                disableReshare?: boolean | null;
            } | null;
            YOUTUBE?: {
                type?: 'VIDEO' | 'SHORT';
                uploadIds?: Array<(string)> | null;
                text?: string | null;
                description?: string | null;
                privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                /**
                 * Set to true if the video is made for kids.
                 */
                madeForKids?: boolean | null;
            } | null;
            REDDIT?: {
                /**
                 * Subreddit name. Example: r/subredditName or u/username
                 */
                sr: string;
                text: string;
                description?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The URL to which the post will link to.
                 */
                link?: string | null;
                /**
                 * Set to true if the post is NSFW.
                 */
                nsfw?: boolean | null;
            } | null;
            DISCORD?: {
                channelId: string;
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The username to display as the author of the message.
                 */
                username?: string | null;
                /**
                 * Avatar url to display as the author of the message.
                 */
                avatarUrl?: string | null;
            } | null;
            SLACK?: {
                channelId: string;
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The username to display as the author of the message.
                 */
                username?: string | null;
                /**
                 * Avatar url to display as the author of the message.
                 */
                avatarUrl?: string | null;
            } | null;
            MASTODON?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                spoiler?: string | null;
            } | null;
        };
    };
};

export type PostUpdateResponse = {
    id: string;
    teamId: string;
    title: string;
    postDate: string | null;
    postedDate?: string | null;
    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    data: {
        TWITTER?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        PINTEREST?: {
            text?: string | null;
            description?: string | null;
            boardName: string;
            uploadIds?: Array<(string)> | null;
            /**
             * The URL to which the Pin will link to.
             */
            link?: string | null;
            /**
             * The alt text for the image. This is used by screen readers and when the image can't be loaded.
             */
            altText?: string | null;
            /**
             * A note about the Pin. This is not visible to the public.
             */
            note?: string | null;
            /**
             * The dominant color of the image. This is used to display the image before it's loaded.
             */
            dominantColor?: string | null;
        } | null;
        FACEBOOK?: {
            type?: 'POST' | 'REEL' | 'STORY';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        INSTAGRAM?: {
            type?: 'POST' | 'REEL' | 'STORY';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        THREADS?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        TIKTOK?: {
            type?: 'VIDEO' | 'IMAGE';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
            /**
             * Set to true if the video is a paid partnership to promote a third-party business.
             */
            isBrandContent?: boolean | null;
            /**
             * Set to true if this video is promoting the creator's own business.
             */
            isOrganicBrandContent?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make comments on this post.
             */
            disableComments?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make Stitches using this post.
             */
            disableDuet?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make Duets using this post.
             */
            disableStitch?: boolean | null;
            /**
             * Choose a frame of the published video as the cover photo in ms
             */
            thumbnailOffset?: number | null;
            /**
             * Set to true if this video is AI generated.
             */
            isAiGenerated?: boolean | null;
        } | null;
        LINKEDIN?: {
            text: string;
            uploadIds?: Array<(string)> | null;
            privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
            /**
             * Set to true if the post shouldn't be displayed in the main feed.
             */
            hideFromFeed?: boolean | null;
            /**
             * Set to true if the post is not allowed to be reshared.
             */
            disableReshare?: boolean | null;
        } | null;
        YOUTUBE?: {
            type?: 'VIDEO' | 'SHORT';
            uploadIds?: Array<(string)> | null;
            text?: string | null;
            description?: string | null;
            privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
            /**
             * Set to true if the video is made for kids.
             */
            madeForKids?: boolean | null;
        } | null;
        REDDIT?: {
            /**
             * Subreddit name. Example: r/subredditName or u/username
             */
            sr: string;
            text: string;
            description?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The URL to which the post will link to.
             */
            link?: string | null;
            /**
             * Set to true if the post is NSFW.
             */
            nsfw?: boolean | null;
        } | null;
        DISCORD?: {
            channelId: string;
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The username to display as the author of the message.
             */
            username?: string | null;
            /**
             * Avatar url to display as the author of the message.
             */
            avatarUrl?: string | null;
        } | null;
        SLACK?: {
            channelId: string;
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The username to display as the author of the message.
             */
            username?: string | null;
            /**
             * Avatar url to display as the author of the message.
             */
            avatarUrl?: string | null;
        } | null;
        MASTODON?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
            spoiler?: string | null;
        } | null;
    };
    error?: string | null;
    errors?: {
        TWITTER?: string | null;
        PINTEREST?: string | null;
        FACEBOOK?: string | null;
        INSTAGRAM?: string | null;
        TIKTOK?: string | null;
        LINKEDIN?: string | null;
        REDDIT?: string | null;
        DISCORD?: string | null;
        SLACK?: string | null;
        YOUTUBE?: string | null;
        MASTODON?: string | null;
        THREADS?: string | null;
    } | null;
    externalData?: {
        TWITTER?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        PINTEREST?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        FACEBOOK?: {
            id?: string | null;
            postId?: string | null;
            videoId?: string | null;
            permalink?: string | null;
        } | null;
        INSTAGRAM?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        TIKTOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        LINKEDIN?: {
            id?: string | null;
            activity?: string | null;
            permalink?: string | null;
        } | null;
        REDDIT?: {
            id?: string | null;
            permalink?: string | null;
            subreddit_name?: string | null;
        } | null;
        DISCORD?: {
            id?: string | null;
            permalink?: string | null;
            channelId?: string | null;
        } | null;
        SLACK?: {
            id?: string | null;
            permalink?: string | null;
            channelId?: string | null;
        } | null;
        YOUTUBE?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        MASTODON?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        THREADS?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type PostDeleteData = {
    id: string;
};

export type PostDeleteResponse = {
    id: string;
    teamId: string;
    title: string;
    postDate: string | null;
    postedDate?: string | null;
    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    data: {
        TWITTER?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        PINTEREST?: {
            text?: string | null;
            description?: string | null;
            boardName: string;
            uploadIds?: Array<(string)> | null;
            /**
             * The URL to which the Pin will link to.
             */
            link?: string | null;
            /**
             * The alt text for the image. This is used by screen readers and when the image can't be loaded.
             */
            altText?: string | null;
            /**
             * A note about the Pin. This is not visible to the public.
             */
            note?: string | null;
            /**
             * The dominant color of the image. This is used to display the image before it's loaded.
             */
            dominantColor?: string | null;
        } | null;
        FACEBOOK?: {
            type?: 'POST' | 'REEL' | 'STORY';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        INSTAGRAM?: {
            type?: 'POST' | 'REEL' | 'STORY';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        THREADS?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        TIKTOK?: {
            type?: 'VIDEO' | 'IMAGE';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
            /**
             * Set to true if the video is a paid partnership to promote a third-party business.
             */
            isBrandContent?: boolean | null;
            /**
             * Set to true if this video is promoting the creator's own business.
             */
            isOrganicBrandContent?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make comments on this post.
             */
            disableComments?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make Stitches using this post.
             */
            disableDuet?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make Duets using this post.
             */
            disableStitch?: boolean | null;
            /**
             * Choose a frame of the published video as the cover photo in ms
             */
            thumbnailOffset?: number | null;
            /**
             * Set to true if this video is AI generated.
             */
            isAiGenerated?: boolean | null;
        } | null;
        LINKEDIN?: {
            text: string;
            uploadIds?: Array<(string)> | null;
            privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
            /**
             * Set to true if the post shouldn't be displayed in the main feed.
             */
            hideFromFeed?: boolean | null;
            /**
             * Set to true if the post is not allowed to be reshared.
             */
            disableReshare?: boolean | null;
        } | null;
        YOUTUBE?: {
            type?: 'VIDEO' | 'SHORT';
            uploadIds?: Array<(string)> | null;
            text?: string | null;
            description?: string | null;
            privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
            /**
             * Set to true if the video is made for kids.
             */
            madeForKids?: boolean | null;
        } | null;
        REDDIT?: {
            /**
             * Subreddit name. Example: r/subredditName or u/username
             */
            sr: string;
            text: string;
            description?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The URL to which the post will link to.
             */
            link?: string | null;
            /**
             * Set to true if the post is NSFW.
             */
            nsfw?: boolean | null;
        } | null;
        DISCORD?: {
            channelId: string;
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The username to display as the author of the message.
             */
            username?: string | null;
            /**
             * Avatar url to display as the author of the message.
             */
            avatarUrl?: string | null;
        } | null;
        SLACK?: {
            channelId: string;
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The username to display as the author of the message.
             */
            username?: string | null;
            /**
             * Avatar url to display as the author of the message.
             */
            avatarUrl?: string | null;
        } | null;
        MASTODON?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
            spoiler?: string | null;
        } | null;
    };
    error?: string | null;
    errors?: {
        TWITTER?: string | null;
        PINTEREST?: string | null;
        FACEBOOK?: string | null;
        INSTAGRAM?: string | null;
        TIKTOK?: string | null;
        LINKEDIN?: string | null;
        REDDIT?: string | null;
        DISCORD?: string | null;
        SLACK?: string | null;
        YOUTUBE?: string | null;
        MASTODON?: string | null;
        THREADS?: string | null;
    } | null;
    externalData?: {
        TWITTER?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        PINTEREST?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        FACEBOOK?: {
            id?: string | null;
            postId?: string | null;
            videoId?: string | null;
            permalink?: string | null;
        } | null;
        INSTAGRAM?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        TIKTOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        LINKEDIN?: {
            id?: string | null;
            activity?: string | null;
            permalink?: string | null;
        } | null;
        REDDIT?: {
            id?: string | null;
            permalink?: string | null;
            subreddit_name?: string | null;
        } | null;
        DISCORD?: {
            id?: string | null;
            permalink?: string | null;
            channelId?: string | null;
        } | null;
        SLACK?: {
            id?: string | null;
            permalink?: string | null;
            channelId?: string | null;
        } | null;
        YOUTUBE?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        MASTODON?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        THREADS?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type PostGetListData = {
    limit?: number | null;
    offset?: number | null;
    order?: 'ASC' | 'DESC' | null;
    orderBy?: 'createdAt' | 'updatedAt' | 'postDate' | 'postedDate' | 'deletedAt' | null;
    platforms?: Array<('TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK')> | null;
    q?: string | null;
    status?: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING' | null;
    teamId: string;
};

export type PostGetListResponse = {
    items: Array<{
        id: string;
        teamId: string;
        title: string;
        postDate: string | null;
        postedDate?: string | null;
        status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
        data: {
            TWITTER?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            PINTEREST?: {
                text?: string | null;
                description?: string | null;
                boardName: string;
                uploadIds?: Array<(string)> | null;
                /**
                 * The URL to which the Pin will link to.
                 */
                link?: string | null;
                /**
                 * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                 */
                altText?: string | null;
                /**
                 * A note about the Pin. This is not visible to the public.
                 */
                note?: string | null;
                /**
                 * The dominant color of the image. This is used to display the image before it's loaded.
                 */
                dominantColor?: string | null;
            } | null;
            FACEBOOK?: {
                type?: 'POST' | 'REEL' | 'STORY';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            INSTAGRAM?: {
                type?: 'POST' | 'REEL' | 'STORY';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            THREADS?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            TIKTOK?: {
                type?: 'VIDEO' | 'IMAGE';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                /**
                 * Set to true if the video is a paid partnership to promote a third-party business.
                 */
                isBrandContent?: boolean | null;
                /**
                 * Set to true if this video is promoting the creator's own business.
                 */
                isOrganicBrandContent?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make comments on this post.
                 */
                disableComments?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                 */
                disableDuet?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make Duets using this post.
                 */
                disableStitch?: boolean | null;
                /**
                 * Choose a frame of the published video as the cover photo in ms
                 */
                thumbnailOffset?: number | null;
                /**
                 * Set to true if this video is AI generated.
                 */
                isAiGenerated?: boolean | null;
            } | null;
            LINKEDIN?: {
                text: string;
                uploadIds?: Array<(string)> | null;
                privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                /**
                 * Set to true if the post shouldn't be displayed in the main feed.
                 */
                hideFromFeed?: boolean | null;
                /**
                 * Set to true if the post is not allowed to be reshared.
                 */
                disableReshare?: boolean | null;
            } | null;
            YOUTUBE?: {
                type?: 'VIDEO' | 'SHORT';
                uploadIds?: Array<(string)> | null;
                text?: string | null;
                description?: string | null;
                privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                /**
                 * Set to true if the video is made for kids.
                 */
                madeForKids?: boolean | null;
            } | null;
            REDDIT?: {
                /**
                 * Subreddit name. Example: r/subredditName or u/username
                 */
                sr: string;
                text: string;
                description?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The URL to which the post will link to.
                 */
                link?: string | null;
                /**
                 * Set to true if the post is NSFW.
                 */
                nsfw?: boolean | null;
            } | null;
            DISCORD?: {
                channelId: string;
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The username to display as the author of the message.
                 */
                username?: string | null;
                /**
                 * Avatar url to display as the author of the message.
                 */
                avatarUrl?: string | null;
            } | null;
            SLACK?: {
                channelId: string;
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The username to display as the author of the message.
                 */
                username?: string | null;
                /**
                 * Avatar url to display as the author of the message.
                 */
                avatarUrl?: string | null;
            } | null;
            MASTODON?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                spoiler?: string | null;
            } | null;
        };
        error?: string | null;
        errors?: {
            TWITTER?: string | null;
            PINTEREST?: string | null;
            FACEBOOK?: string | null;
            INSTAGRAM?: string | null;
            TIKTOK?: string | null;
            LINKEDIN?: string | null;
            REDDIT?: string | null;
            DISCORD?: string | null;
            SLACK?: string | null;
            YOUTUBE?: string | null;
            MASTODON?: string | null;
            THREADS?: string | null;
        } | null;
        externalData?: {
            TWITTER?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            PINTEREST?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            FACEBOOK?: {
                id?: string | null;
                postId?: string | null;
                videoId?: string | null;
                permalink?: string | null;
            } | null;
            INSTAGRAM?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            TIKTOK?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            LINKEDIN?: {
                id?: string | null;
                activity?: string | null;
                permalink?: string | null;
            } | null;
            REDDIT?: {
                id?: string | null;
                permalink?: string | null;
                subreddit_name?: string | null;
            } | null;
            DISCORD?: {
                id?: string | null;
                permalink?: string | null;
                channelId?: string | null;
            } | null;
            SLACK?: {
                id?: string | null;
                permalink?: string | null;
                channelId?: string | null;
            } | null;
            YOUTUBE?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            MASTODON?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            THREADS?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
        } | null;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
        uploads: Array<{
            postId: string;
            uploadId: string;
            createdAt: string | null;
            updatedAt: string | null;
            deletedAt?: string | null;
            upload: {
                id: string;
                teamId: string;
                expiresAt?: string | null;
                iconUrl?: string | null;
                thumbnailUrl?: string | null;
                url?: string | null;
                iconPath?: string | null;
                thumbnailPath?: string | null;
                path?: string | null;
                type: 'image' | 'video';
                width?: number | null;
                height?: number | null;
                fileSize?: number | null;
                videoLength?: number | null;
                mime?: string | null;
                ext?: string | null;
                createdAt: string | null;
                updatedAt: string | null;
            };
        }>;
        socialAccounts: Array<{
            postId: string;
            socialAccountId: string;
            createdAt: string | null;
            updatedAt: string | null;
            deletedAt?: string | null;
            socialAccount: {
                id: string;
                type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                teamId: string;
                username?: string | null;
                displayName?: string | null;
                externalId?: string | null;
                userUsername?: string | null;
                userDisplayName?: string | null;
                userId?: string | null;
                channels?: Array<{
                    id: string;
                    name?: string | null;
                    username?: string | null;
                    webhook?: {
                        id?: string | null;
                        name?: string | null;
                        avatar?: string | null;
                        url?: string | null;
                    } | null;
                }> | null;
                createdAt: string | null;
                updatedAt: string | null;
                deletedAt?: string | null;
            };
        }>;
    }>;
    total: number;
};

export type PostCreateData = {
    /**
     * Body
     */
    requestBody?: {
        teamId: string;
        title: string;
        postDate: string;
        status: 'DRAFT' | 'SCHEDULED';
        socialAccountTypes: Array<('TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK')>;
        data: {
            TWITTER?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            PINTEREST?: {
                text?: string | null;
                description?: string | null;
                boardName: string;
                uploadIds?: Array<(string)> | null;
                /**
                 * The URL to which the Pin will link to.
                 */
                link?: string | null;
                /**
                 * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                 */
                altText?: string | null;
                /**
                 * A note about the Pin. This is not visible to the public.
                 */
                note?: string | null;
                /**
                 * The dominant color of the image. This is used to display the image before it's loaded.
                 */
                dominantColor?: string | null;
            } | null;
            FACEBOOK?: {
                type?: 'POST' | 'REEL' | 'STORY';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            INSTAGRAM?: {
                type?: 'POST' | 'REEL' | 'STORY';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            THREADS?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            TIKTOK?: {
                type?: 'VIDEO' | 'IMAGE';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                /**
                 * Set to true if the video is a paid partnership to promote a third-party business.
                 */
                isBrandContent?: boolean | null;
                /**
                 * Set to true if this video is promoting the creator's own business.
                 */
                isOrganicBrandContent?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make comments on this post.
                 */
                disableComments?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                 */
                disableDuet?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make Duets using this post.
                 */
                disableStitch?: boolean | null;
                /**
                 * Choose a frame of the published video as the cover photo in ms
                 */
                thumbnailOffset?: number | null;
                /**
                 * Set to true if this video is AI generated.
                 */
                isAiGenerated?: boolean | null;
            } | null;
            LINKEDIN?: {
                text: string;
                uploadIds?: Array<(string)> | null;
                privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                /**
                 * Set to true if the post shouldn't be displayed in the main feed.
                 */
                hideFromFeed?: boolean | null;
                /**
                 * Set to true if the post is not allowed to be reshared.
                 */
                disableReshare?: boolean | null;
            } | null;
            YOUTUBE?: {
                type?: 'VIDEO' | 'SHORT';
                uploadIds?: Array<(string)> | null;
                text?: string | null;
                description?: string | null;
                privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                /**
                 * Set to true if the video is made for kids.
                 */
                madeForKids?: boolean | null;
            } | null;
            REDDIT?: {
                /**
                 * Subreddit name. Example: r/subredditName or u/username
                 */
                sr: string;
                text: string;
                description?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The URL to which the post will link to.
                 */
                link?: string | null;
                /**
                 * Set to true if the post is NSFW.
                 */
                nsfw?: boolean | null;
            } | null;
            DISCORD?: {
                channelId: string;
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The username to display as the author of the message.
                 */
                username?: string | null;
                /**
                 * Avatar url to display as the author of the message.
                 */
                avatarUrl?: string | null;
            } | null;
            SLACK?: {
                channelId: string;
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The username to display as the author of the message.
                 */
                username?: string | null;
                /**
                 * Avatar url to display as the author of the message.
                 */
                avatarUrl?: string | null;
            } | null;
            MASTODON?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                spoiler?: string | null;
            } | null;
        };
    };
};

export type PostCreateResponse = {
    id: string;
    teamId: string;
    title: string;
    postDate: string | null;
    postedDate?: string | null;
    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    data: {
        TWITTER?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        PINTEREST?: {
            text?: string | null;
            description?: string | null;
            boardName: string;
            uploadIds?: Array<(string)> | null;
            /**
             * The URL to which the Pin will link to.
             */
            link?: string | null;
            /**
             * The alt text for the image. This is used by screen readers and when the image can't be loaded.
             */
            altText?: string | null;
            /**
             * A note about the Pin. This is not visible to the public.
             */
            note?: string | null;
            /**
             * The dominant color of the image. This is used to display the image before it's loaded.
             */
            dominantColor?: string | null;
        } | null;
        FACEBOOK?: {
            type?: 'POST' | 'REEL' | 'STORY';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        INSTAGRAM?: {
            type?: 'POST' | 'REEL' | 'STORY';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        THREADS?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
        } | null;
        TIKTOK?: {
            type?: 'VIDEO' | 'IMAGE';
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
            /**
             * Set to true if the video is a paid partnership to promote a third-party business.
             */
            isBrandContent?: boolean | null;
            /**
             * Set to true if this video is promoting the creator's own business.
             */
            isOrganicBrandContent?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make comments on this post.
             */
            disableComments?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make Stitches using this post.
             */
            disableDuet?: boolean | null;
            /**
             * If set to true, other TikTok users will not be allowed to make Duets using this post.
             */
            disableStitch?: boolean | null;
            /**
             * Choose a frame of the published video as the cover photo in ms
             */
            thumbnailOffset?: number | null;
            /**
             * Set to true if this video is AI generated.
             */
            isAiGenerated?: boolean | null;
        } | null;
        LINKEDIN?: {
            text: string;
            uploadIds?: Array<(string)> | null;
            privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
            /**
             * Set to true if the post shouldn't be displayed in the main feed.
             */
            hideFromFeed?: boolean | null;
            /**
             * Set to true if the post is not allowed to be reshared.
             */
            disableReshare?: boolean | null;
        } | null;
        YOUTUBE?: {
            type?: 'VIDEO' | 'SHORT';
            uploadIds?: Array<(string)> | null;
            text?: string | null;
            description?: string | null;
            privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
            /**
             * Set to true if the video is made for kids.
             */
            madeForKids?: boolean | null;
        } | null;
        REDDIT?: {
            /**
             * Subreddit name. Example: r/subredditName or u/username
             */
            sr: string;
            text: string;
            description?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The URL to which the post will link to.
             */
            link?: string | null;
            /**
             * Set to true if the post is NSFW.
             */
            nsfw?: boolean | null;
        } | null;
        DISCORD?: {
            channelId: string;
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The username to display as the author of the message.
             */
            username?: string | null;
            /**
             * Avatar url to display as the author of the message.
             */
            avatarUrl?: string | null;
        } | null;
        SLACK?: {
            channelId: string;
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            /**
             * The username to display as the author of the message.
             */
            username?: string | null;
            /**
             * Avatar url to display as the author of the message.
             */
            avatarUrl?: string | null;
        } | null;
        MASTODON?: {
            text?: string | null;
            uploadIds?: Array<(string)> | null;
            privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
            spoiler?: string | null;
        } | null;
    };
    error?: string | null;
    errors?: {
        TWITTER?: string | null;
        PINTEREST?: string | null;
        FACEBOOK?: string | null;
        INSTAGRAM?: string | null;
        TIKTOK?: string | null;
        LINKEDIN?: string | null;
        REDDIT?: string | null;
        DISCORD?: string | null;
        SLACK?: string | null;
        YOUTUBE?: string | null;
        MASTODON?: string | null;
        THREADS?: string | null;
    } | null;
    externalData?: {
        TWITTER?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        PINTEREST?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        FACEBOOK?: {
            id?: string | null;
            postId?: string | null;
            videoId?: string | null;
            permalink?: string | null;
        } | null;
        INSTAGRAM?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        TIKTOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        LINKEDIN?: {
            id?: string | null;
            activity?: string | null;
            permalink?: string | null;
        } | null;
        REDDIT?: {
            id?: string | null;
            permalink?: string | null;
            subreddit_name?: string | null;
        } | null;
        DISCORD?: {
            id?: string | null;
            permalink?: string | null;
            channelId?: string | null;
        } | null;
        SLACK?: {
            id?: string | null;
            permalink?: string | null;
            channelId?: string | null;
        } | null;
        YOUTUBE?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        MASTODON?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        THREADS?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type AnalyticsGetProfileAnalyticsData = {
    platformType: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'THREADS' | 'REDDIT' | 'PINTEREST' | 'MASTODON';
    teamId: string;
};

export type AnalyticsGetProfileAnalyticsResponse = Array<{
    id: string;
    socialAccountId: string;
    impressions: number;
    impressionsUnique: number;
    views: number;
    viewsUnique: number;
    likes: number;
    comments: number;
    postCount: number;
    followers: number;
    following: number;
    raw?: unknown;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
}>;

export type AnalyticsGetProfilePostsData = {
    platformType: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'THREADS' | 'REDDIT' | 'PINTEREST' | 'MASTODON';
    teamId: string;
};

export type AnalyticsGetProfilePostsResponse = Array<{
    id: string;
    socialAccountId: string;
    postId?: string | null;
    externalId?: string | null;
    title?: string | null;
    description?: string | null;
    smallThumbnail?: string | null;
    thumbnail?: string | null;
    permalink?: string | null;
    subreddit?: string | null;
    publishedAt?: string | null;
    type: 'POST' | 'REEL' | 'STORY' | 'VIDEO' | 'IMAGE';
    init: boolean;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
}>;

export type AnalyticsGetProfilePostData = {
    id: string;
};

export type AnalyticsGetProfilePostResponse = {
    id: string;
    socialAccountId: string;
    postId?: string | null;
    externalId?: string | null;
    title?: string | null;
    description?: string | null;
    smallThumbnail?: string | null;
    thumbnail?: string | null;
    permalink?: string | null;
    subreddit?: string | null;
    publishedAt?: string | null;
    type: 'POST' | 'REEL' | 'STORY' | 'VIDEO' | 'IMAGE';
    init: boolean;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
    analytics: Array<{
        id: string;
        profilePostId: string;
        impressions: number;
        impressionsUnique: number;
        views: number;
        viewsUnique: number;
        likes: number;
        dislikes: number;
        comments: number;
        shares: number;
        saves: number;
        raw?: unknown;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    }>;
    socialAccount: {
        id: string;
        type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
        teamId: string;
        username?: string | null;
        displayName?: string | null;
        externalId?: string | null;
        userUsername?: string | null;
        userDisplayName?: string | null;
        userId?: string | null;
        channels?: Array<{
            id: string;
            name?: string | null;
            username?: string | null;
            webhook?: {
                id?: string | null;
                name?: string | null;
                avatar?: string | null;
                url?: string | null;
            } | null;
        }> | null;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    };
    post?: {
        id: string;
        teamId: string;
        title: string;
        postDate: string | null;
        postedDate?: string | null;
        status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
        data: {
            TWITTER?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            PINTEREST?: {
                text?: string | null;
                description?: string | null;
                boardName: string;
                uploadIds?: Array<(string)> | null;
                /**
                 * The URL to which the Pin will link to.
                 */
                link?: string | null;
                /**
                 * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                 */
                altText?: string | null;
                /**
                 * A note about the Pin. This is not visible to the public.
                 */
                note?: string | null;
                /**
                 * The dominant color of the image. This is used to display the image before it's loaded.
                 */
                dominantColor?: string | null;
            } | null;
            FACEBOOK?: {
                type?: 'POST' | 'REEL' | 'STORY';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            INSTAGRAM?: {
                type?: 'POST' | 'REEL' | 'STORY';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            THREADS?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
            } | null;
            TIKTOK?: {
                type?: 'VIDEO' | 'IMAGE';
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                /**
                 * Set to true if the video is a paid partnership to promote a third-party business.
                 */
                isBrandContent?: boolean | null;
                /**
                 * Set to true if this video is promoting the creator's own business.
                 */
                isOrganicBrandContent?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make comments on this post.
                 */
                disableComments?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                 */
                disableDuet?: boolean | null;
                /**
                 * If set to true, other TikTok users will not be allowed to make Duets using this post.
                 */
                disableStitch?: boolean | null;
                /**
                 * Choose a frame of the published video as the cover photo in ms
                 */
                thumbnailOffset?: number | null;
                /**
                 * Set to true if this video is AI generated.
                 */
                isAiGenerated?: boolean | null;
            } | null;
            LINKEDIN?: {
                text: string;
                uploadIds?: Array<(string)> | null;
                privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                /**
                 * Set to true if the post shouldn't be displayed in the main feed.
                 */
                hideFromFeed?: boolean | null;
                /**
                 * Set to true if the post is not allowed to be reshared.
                 */
                disableReshare?: boolean | null;
            } | null;
            YOUTUBE?: {
                type?: 'VIDEO' | 'SHORT';
                uploadIds?: Array<(string)> | null;
                text?: string | null;
                description?: string | null;
                privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                /**
                 * Set to true if the video is made for kids.
                 */
                madeForKids?: boolean | null;
            } | null;
            REDDIT?: {
                /**
                 * Subreddit name. Example: r/subredditName or u/username
                 */
                sr: string;
                text: string;
                description?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The URL to which the post will link to.
                 */
                link?: string | null;
                /**
                 * Set to true if the post is NSFW.
                 */
                nsfw?: boolean | null;
            } | null;
            DISCORD?: {
                channelId: string;
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The username to display as the author of the message.
                 */
                username?: string | null;
                /**
                 * Avatar url to display as the author of the message.
                 */
                avatarUrl?: string | null;
            } | null;
            SLACK?: {
                channelId: string;
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                /**
                 * The username to display as the author of the message.
                 */
                username?: string | null;
                /**
                 * Avatar url to display as the author of the message.
                 */
                avatarUrl?: string | null;
            } | null;
            MASTODON?: {
                text?: string | null;
                uploadIds?: Array<(string)> | null;
                privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                spoiler?: string | null;
            } | null;
        };
        error?: string | null;
        errors?: {
            TWITTER?: string | null;
            PINTEREST?: string | null;
            FACEBOOK?: string | null;
            INSTAGRAM?: string | null;
            TIKTOK?: string | null;
            LINKEDIN?: string | null;
            REDDIT?: string | null;
            DISCORD?: string | null;
            SLACK?: string | null;
            YOUTUBE?: string | null;
            MASTODON?: string | null;
            THREADS?: string | null;
        } | null;
        externalData?: {
            TWITTER?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            PINTEREST?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            FACEBOOK?: {
                id?: string | null;
                postId?: string | null;
                videoId?: string | null;
                permalink?: string | null;
            } | null;
            INSTAGRAM?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            TIKTOK?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            LINKEDIN?: {
                id?: string | null;
                activity?: string | null;
                permalink?: string | null;
            } | null;
            REDDIT?: {
                id?: string | null;
                permalink?: string | null;
                subreddit_name?: string | null;
            } | null;
            DISCORD?: {
                id?: string | null;
                permalink?: string | null;
                channelId?: string | null;
            } | null;
            SLACK?: {
                id?: string | null;
                permalink?: string | null;
                channelId?: string | null;
            } | null;
            YOUTUBE?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            MASTODON?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            THREADS?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
        } | null;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
        profilePosts: Array<{
            id: string;
            socialAccountId: string;
            postId?: string | null;
            externalId?: string | null;
            title?: string | null;
            description?: string | null;
            smallThumbnail?: string | null;
            thumbnail?: string | null;
            permalink?: string | null;
            subreddit?: string | null;
            publishedAt?: string | null;
            type: 'POST' | 'REEL' | 'STORY' | 'VIDEO' | 'IMAGE';
            init: boolean;
            createdAt: string | null;
            updatedAt: string | null;
            deletedAt?: string | null;
            socialAccount: {
                id: string;
                type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                teamId: string;
                username?: string | null;
                displayName?: string | null;
                externalId?: string | null;
                userUsername?: string | null;
                userDisplayName?: string | null;
                userId?: string | null;
                channels?: Array<{
                    id: string;
                    name?: string | null;
                    username?: string | null;
                    webhook?: {
                        id?: string | null;
                        name?: string | null;
                        avatar?: string | null;
                        url?: string | null;
                    } | null;
                }> | null;
                createdAt: string | null;
                updatedAt: string | null;
                deletedAt?: string | null;
            };
        }>;
    } | null;
};

export type CommentGetData = {
    id: string;
};

export type CommentGetResponse = {
    id: string;
    teamId: string;
    internalPostId: string;
    internalParentCommentId?: string | null;
    text: string;
    postDate: string | null;
    postedDate?: string | null;
    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    data: {
        FACEBOOK?: {
            text?: string | null;
        } | null;
        INSTAGRAM?: {
            text?: string | null;
        } | null;
        THREADS?: {
            text?: string | null;
        } | null;
        TIKTOK?: {
            text?: string | null;
        } | null;
        LINKEDIN?: {
            text: string;
        } | null;
        YOUTUBE?: {
            text?: string | null;
        } | null;
        REDDIT?: {
            text: string;
        } | null;
        MASTODON?: {
            text?: string | null;
        } | null;
        DISCORD?: {
            text?: string | null;
        } | null;
        SLACK?: {
            text?: string | null;
        } | null;
    };
    error?: string | null;
    errors?: {
        FACEBOOK?: string | null;
        INSTAGRAM?: string | null;
        TIKTOK?: string | null;
        LINKEDIN?: string | null;
        REDDIT?: string | null;
        YOUTUBE?: string | null;
        MASTODON?: string | null;
        THREADS?: string | null;
        DISCORD?: string | null;
        SLACK?: string | null;
    } | null;
    externalData?: {
        FACEBOOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        INSTAGRAM?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        TIKTOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        LINKEDIN?: {
            id?: string | null;
            commentUrn?: string | null;
            permalink?: string | null;
        } | null;
        REDDIT?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        YOUTUBE?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        MASTODON?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        THREADS?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        DISCORD?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        SLACK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type CommentUpdateData = {
    id: string;
    /**
     * Body
     */
    requestBody?: {
        text?: string;
        internalPostId?: string;
        internalParentCommentId?: string | null;
        postDate?: string;
        status?: 'DRAFT' | 'SCHEDULED';
        socialAccountTypes?: Array<('TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'THREADS' | 'LINKEDIN' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK')>;
        data?: {
            FACEBOOK?: {
                text?: string | null;
            } | null;
            INSTAGRAM?: {
                text?: string | null;
            } | null;
            THREADS?: {
                text?: string | null;
            } | null;
            TIKTOK?: {
                text?: string | null;
            } | null;
            LINKEDIN?: {
                text: string;
            } | null;
            YOUTUBE?: {
                text?: string | null;
            } | null;
            REDDIT?: {
                text: string;
            } | null;
            MASTODON?: {
                text?: string | null;
            } | null;
            DISCORD?: {
                text?: string | null;
            } | null;
            SLACK?: {
                text?: string | null;
            } | null;
        };
    };
};

export type CommentUpdateResponse = {
    id: string;
    teamId: string;
    internalPostId: string;
    internalParentCommentId?: string | null;
    text: string;
    postDate: string | null;
    postedDate?: string | null;
    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    data: {
        FACEBOOK?: {
            text?: string | null;
        } | null;
        INSTAGRAM?: {
            text?: string | null;
        } | null;
        THREADS?: {
            text?: string | null;
        } | null;
        TIKTOK?: {
            text?: string | null;
        } | null;
        LINKEDIN?: {
            text: string;
        } | null;
        YOUTUBE?: {
            text?: string | null;
        } | null;
        REDDIT?: {
            text: string;
        } | null;
        MASTODON?: {
            text?: string | null;
        } | null;
        DISCORD?: {
            text?: string | null;
        } | null;
        SLACK?: {
            text?: string | null;
        } | null;
    };
    error?: string | null;
    errors?: {
        FACEBOOK?: string | null;
        INSTAGRAM?: string | null;
        TIKTOK?: string | null;
        LINKEDIN?: string | null;
        REDDIT?: string | null;
        YOUTUBE?: string | null;
        MASTODON?: string | null;
        THREADS?: string | null;
        DISCORD?: string | null;
        SLACK?: string | null;
    } | null;
    externalData?: {
        FACEBOOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        INSTAGRAM?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        TIKTOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        LINKEDIN?: {
            id?: string | null;
            commentUrn?: string | null;
            permalink?: string | null;
        } | null;
        REDDIT?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        YOUTUBE?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        MASTODON?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        THREADS?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        DISCORD?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        SLACK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type CommentDeleteData = {
    id: string;
};

export type CommentDeleteResponse = {
    id: string;
    teamId: string;
    internalPostId: string;
    internalParentCommentId?: string | null;
    text: string;
    postDate: string | null;
    postedDate?: string | null;
    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    data: {
        FACEBOOK?: {
            text?: string | null;
        } | null;
        INSTAGRAM?: {
            text?: string | null;
        } | null;
        THREADS?: {
            text?: string | null;
        } | null;
        TIKTOK?: {
            text?: string | null;
        } | null;
        LINKEDIN?: {
            text: string;
        } | null;
        YOUTUBE?: {
            text?: string | null;
        } | null;
        REDDIT?: {
            text: string;
        } | null;
        MASTODON?: {
            text?: string | null;
        } | null;
        DISCORD?: {
            text?: string | null;
        } | null;
        SLACK?: {
            text?: string | null;
        } | null;
    };
    error?: string | null;
    errors?: {
        FACEBOOK?: string | null;
        INSTAGRAM?: string | null;
        TIKTOK?: string | null;
        LINKEDIN?: string | null;
        REDDIT?: string | null;
        YOUTUBE?: string | null;
        MASTODON?: string | null;
        THREADS?: string | null;
        DISCORD?: string | null;
        SLACK?: string | null;
    } | null;
    externalData?: {
        FACEBOOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        INSTAGRAM?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        TIKTOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        LINKEDIN?: {
            id?: string | null;
            commentUrn?: string | null;
            permalink?: string | null;
        } | null;
        REDDIT?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        YOUTUBE?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        MASTODON?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        THREADS?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        DISCORD?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        SLACK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type CommentGetListData = {
    limit?: number | null;
    offset?: number | null;
    order?: 'ASC' | 'DESC';
    orderBy?: 'createdAt' | 'updatedAt' | 'deletedAt';
    platforms?: Array<('TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'THREADS' | 'LINKEDIN' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK')>;
    q?: string;
    status?: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    teamId: string;
};

export type CommentGetListResponse = {
    items: Array<{
        id: string;
        teamId: string;
        internalPostId: string;
        internalParentCommentId?: string | null;
        text: string;
        postDate: string | null;
        postedDate?: string | null;
        status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
        data: {
            FACEBOOK?: {
                text?: string | null;
            } | null;
            INSTAGRAM?: {
                text?: string | null;
            } | null;
            THREADS?: {
                text?: string | null;
            } | null;
            TIKTOK?: {
                text?: string | null;
            } | null;
            LINKEDIN?: {
                text: string;
            } | null;
            YOUTUBE?: {
                text?: string | null;
            } | null;
            REDDIT?: {
                text: string;
            } | null;
            MASTODON?: {
                text?: string | null;
            } | null;
            DISCORD?: {
                text?: string | null;
            } | null;
            SLACK?: {
                text?: string | null;
            } | null;
        };
        error?: string | null;
        errors?: {
            FACEBOOK?: string | null;
            INSTAGRAM?: string | null;
            TIKTOK?: string | null;
            LINKEDIN?: string | null;
            REDDIT?: string | null;
            YOUTUBE?: string | null;
            MASTODON?: string | null;
            THREADS?: string | null;
            DISCORD?: string | null;
            SLACK?: string | null;
        } | null;
        externalData?: {
            FACEBOOK?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            INSTAGRAM?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            TIKTOK?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            LINKEDIN?: {
                id?: string | null;
                commentUrn?: string | null;
                permalink?: string | null;
            } | null;
            REDDIT?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            YOUTUBE?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            MASTODON?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            THREADS?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            DISCORD?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
            SLACK?: {
                id?: string | null;
                permalink?: string | null;
            } | null;
        } | null;
        createdAt: string | null;
        updatedAt: string | null;
        deletedAt?: string | null;
    }>;
    total: number;
};

export type CommentCreateData = {
    /**
     * Body
     */
    requestBody?: {
        teamId: string;
        text: string;
        internalPostId: string;
        internalParentCommentId?: string | null;
        postDate: string;
        status: 'DRAFT' | 'SCHEDULED';
        socialAccountTypes: Array<('TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'THREADS' | 'LINKEDIN' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK')>;
        data: {
            FACEBOOK?: {
                text?: string | null;
            } | null;
            INSTAGRAM?: {
                text?: string | null;
            } | null;
            THREADS?: {
                text?: string | null;
            } | null;
            TIKTOK?: {
                text?: string | null;
            } | null;
            LINKEDIN?: {
                text: string;
            } | null;
            YOUTUBE?: {
                text?: string | null;
            } | null;
            REDDIT?: {
                text: string;
            } | null;
            MASTODON?: {
                text?: string | null;
            } | null;
            DISCORD?: {
                text?: string | null;
            } | null;
            SLACK?: {
                text?: string | null;
            } | null;
        };
    };
};

export type CommentCreateResponse = {
    id: string;
    teamId: string;
    internalPostId: string;
    internalParentCommentId?: string | null;
    text: string;
    postDate: string | null;
    postedDate?: string | null;
    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
    data: {
        FACEBOOK?: {
            text?: string | null;
        } | null;
        INSTAGRAM?: {
            text?: string | null;
        } | null;
        THREADS?: {
            text?: string | null;
        } | null;
        TIKTOK?: {
            text?: string | null;
        } | null;
        LINKEDIN?: {
            text: string;
        } | null;
        YOUTUBE?: {
            text?: string | null;
        } | null;
        REDDIT?: {
            text: string;
        } | null;
        MASTODON?: {
            text?: string | null;
        } | null;
        DISCORD?: {
            text?: string | null;
        } | null;
        SLACK?: {
            text?: string | null;
        } | null;
    };
    error?: string | null;
    errors?: {
        FACEBOOK?: string | null;
        INSTAGRAM?: string | null;
        TIKTOK?: string | null;
        LINKEDIN?: string | null;
        REDDIT?: string | null;
        YOUTUBE?: string | null;
        MASTODON?: string | null;
        THREADS?: string | null;
        DISCORD?: string | null;
        SLACK?: string | null;
    } | null;
    externalData?: {
        FACEBOOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        INSTAGRAM?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        TIKTOK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        LINKEDIN?: {
            id?: string | null;
            commentUrn?: string | null;
            permalink?: string | null;
        } | null;
        REDDIT?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        YOUTUBE?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        MASTODON?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        THREADS?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        DISCORD?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
        SLACK?: {
            id?: string | null;
            permalink?: string | null;
        } | null;
    } | null;
    createdAt: string | null;
    updatedAt: string | null;
    deletedAt?: string | null;
};

export type $OpenApiTs = {
    '/api/v1/': {
        get: {
            res: {
                /**
                 * 200
                 */
                200: {
                    status: string;
                    createdAt: string;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/organization/': {
        get: {
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    createdById: string;
                    promotionCodeId?: string | null;
                    name?: string | null;
                    avatarUrl?: string | null;
                    apiAccess?: boolean;
                    ref?: string | null;
                    dailyPostLimit?: {
                        TWITTER?: number;
                        FACEBOOK?: number;
                        INSTAGRAM?: number;
                        LINKEDIN?: number;
                        YOUTUBE?: number;
                        TIKTOK?: number;
                        THREADS?: number;
                        PINTEREST?: number;
                        REDDIT?: number;
                        DISCORD?: number;
                        SLACK?: number;
                        MASTODON?: number;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                    teams: Array<{
                        id: string;
                        name: string;
                        avatarUrl?: string | null;
                        organizationId: string;
                        createdById: string;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    }>;
                    createdBy: {
                        id: string;
                        externalId: string;
                        email: string;
                        emailVerified?: string | null;
                        firstName?: string | null;
                        lastName?: string | null;
                        avatarUrl?: string | null;
                        role: 'ADMIN' | 'CUSTOMER';
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    };
                    subscription?: {
                        id: string;
                        organizationId: string;
                        couponId?: string | null;
                        promotionCodeId?: string | null;
                        stripeSubscriptionId: string;
                        stripeSubscriptionItems?: Array<{
                            id: string;
                            price: string;
                            quantity: number;
                        }> | null;
                        status: 'trialing' | 'active' | 'canceled' | 'incomplete' | 'incomplete_expired' | 'past_due' | 'unpaid' | 'paused';
                        metadata?: unknown;
                        stripePriceId: string;
                        tier: 'PRO' | 'BUSINESS';
                        cancelAtPeriodEnd: boolean;
                        created: string | null;
                        currentPeriodStart: string | null;
                        currentPeriodEnd: string | null;
                        endedAt?: string | null;
                        cancelAt?: string | null;
                        canceledAt?: string | null;
                        trialStart?: string | null;
                        trialEnd?: string | null;
                        maxMonthlyPosts: number;
                        discountStart?: string | null;
                        discountEnd?: string | null;
                        createdAt: string | null;
                        updatedAt: string | null;
                        coupon?: {
                            id: string;
                            name?: string | null;
                            amountOff?: number | null;
                            percentOff?: number | null;
                            duration: 'forever' | 'once' | 'repeating';
                            durationInMonths?: number | null;
                            maxRedemptions?: number | null;
                            valid: boolean;
                            createdAt: string | null;
                            updatedAt: string | null;
                            promotionCodes: Array<{
                                id: string;
                                couponId: string;
                                code: string;
                                active: boolean;
                                expiresAt?: string | null;
                                maxRedemptions?: number | null;
                                firstTimeTransaction: boolean;
                                minimumAmount?: number | null;
                                createdAt: string | null;
                                updatedAt: string | null;
                            }>;
                        } | null;
                        promotionCode?: {
                            id: string;
                            couponId: string;
                            code: string;
                            active: boolean;
                            expiresAt?: string | null;
                            maxRedemptions?: number | null;
                            firstTimeTransaction: boolean;
                            minimumAmount?: number | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            coupon: {
                                id: string;
                                name?: string | null;
                                amountOff?: number | null;
                                percentOff?: number | null;
                                duration: 'forever' | 'once' | 'repeating';
                                durationInMonths?: number | null;
                                maxRedemptions?: number | null;
                                valid: boolean;
                                createdAt: string | null;
                                updatedAt: string | null;
                            };
                        } | null;
                    } | null;
                    promotionCode?: {
                        id: string;
                        couponId: string;
                        code: string;
                        active: boolean;
                        expiresAt?: string | null;
                        maxRedemptions?: number | null;
                        firstTimeTransaction: boolean;
                        minimumAmount?: number | null;
                        createdAt: string | null;
                        updatedAt: string | null;
                        coupon: {
                            id: string;
                            name?: string | null;
                            amountOff?: number | null;
                            percentOff?: number | null;
                            duration: 'forever' | 'once' | 'repeating';
                            durationInMonths?: number | null;
                            maxRedemptions?: number | null;
                            valid: boolean;
                            createdAt: string | null;
                            updatedAt: string | null;
                        };
                    } | null;
                    usage: {
                        monthlyPosts: number;
                    };
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/team/{id}': {
        get: {
            req: TeamGetTeamData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    name: string;
                    avatarUrl?: string | null;
                    organizationId: string;
                    createdById: string;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                    organization: {
                        id: string;
                        createdById: string;
                        promotionCodeId?: string | null;
                        name?: string | null;
                        avatarUrl?: string | null;
                        apiAccess?: boolean;
                        ref?: string | null;
                        dailyPostLimit?: {
                            TWITTER?: number;
                            FACEBOOK?: number;
                            INSTAGRAM?: number;
                            LINKEDIN?: number;
                            YOUTUBE?: number;
                            TIKTOK?: number;
                            THREADS?: number;
                            PINTEREST?: number;
                            REDDIT?: number;
                            DISCORD?: number;
                            SLACK?: number;
                            MASTODON?: number;
                        } | null;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    };
                    createdBy: {
                        id: string;
                        externalId: string;
                        email: string;
                        emailVerified?: string | null;
                        firstName?: string | null;
                        lastName?: string | null;
                        avatarUrl?: string | null;
                        role: 'ADMIN' | 'CUSTOMER';
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    };
                    bots: Array<{
                        id: string;
                        name: string;
                        avatarUrl?: string | null;
                        teamId: string;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    }>;
                    socialAccounts: Array<{
                        id: string;
                        type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                        teamId: string;
                        username?: string | null;
                        displayName?: string | null;
                        externalId?: string | null;
                        userUsername?: string | null;
                        userDisplayName?: string | null;
                        userId?: string | null;
                        channels?: Array<{
                            id: string;
                            name?: string | null;
                            username?: string | null;
                            webhook?: {
                                id?: string | null;
                                name?: string | null;
                                avatar?: string | null;
                                url?: string | null;
                            } | null;
                        }> | null;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    }>;
                    bio?: {
                        id: string;
                        username: string;
                        name: string | null;
                        description: string | null;
                        avatarUrl: string | null;
                        socials: {
                            [key: string]: (string | null);
                        } | null;
                        teamId: string;
                        createdAt: string | null;
                        updatedAt: string | null;
                        items: Array<{
                            id: string;
                            bioId: string;
                            name: string;
                            link: string;
                            icon?: string | null;
                            enabled: boolean;
                            order?: number | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            analytics: Array<{
                                id: string;
                                count: number;
                                bioItemId: string;
                                deviceType: {
                                    [key: string]: (number);
                                };
                                country: {
                                    [key: string]: (number);
                                };
                                createdAt: string | null;
                                updatedAt: string | null;
                            }>;
                        }>;
                    } | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        patch: {
            req: TeamUpdateTeamData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    name: string;
                    avatarUrl?: string | null;
                    organizationId: string;
                    createdById: string;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        delete: {
            req: TeamDeleteTeamData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    name: string;
                    avatarUrl?: string | null;
                    organizationId: string;
                    createdById: string;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/team/': {
        post: {
            req: TeamCreateTeamData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    name: string;
                    avatarUrl?: string | null;
                    organizationId: string;
                    createdById: string;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/social-account/connect': {
        post: {
            req: SocialAccountConnectData;
            res: {
                /**
                 * 200
                 */
                200: {
                    /**
                     * OAuth URL - Redirect user to this URL to connect social account
                     */
                    url: string;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/social-account/disconnect': {
        delete: {
            req: SocialAccountDisconnectData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                    teamId: string;
                    username?: string | null;
                    displayName?: string | null;
                    externalId?: string | null;
                    userUsername?: string | null;
                    userDisplayName?: string | null;
                    userId?: string | null;
                    channels?: Array<{
                        id: string;
                        name?: string | null;
                        username?: string | null;
                        webhook?: {
                            id?: string | null;
                            name?: string | null;
                            avatar?: string | null;
                            url?: string | null;
                        } | null;
                    }> | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/social-account/set-channel': {
        post: {
            req: SocialAccountSetChannelData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                    teamId: string;
                    username?: string | null;
                    displayName?: string | null;
                    externalId?: string | null;
                    userUsername?: string | null;
                    userDisplayName?: string | null;
                    userId?: string | null;
                    channels?: Array<{
                        id: string;
                        name?: string | null;
                        username?: string | null;
                        webhook?: {
                            id?: string | null;
                            name?: string | null;
                            avatar?: string | null;
                            url?: string | null;
                        } | null;
                    }> | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/social-account/refresh-channels': {
        post: {
            req: SocialAccountRefreshChannelsData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                    teamId: string;
                    username?: string | null;
                    displayName?: string | null;
                    externalId?: string | null;
                    userUsername?: string | null;
                    userDisplayName?: string | null;
                    userId?: string | null;
                    channels?: Array<{
                        id: string;
                        name?: string | null;
                        username?: string | null;
                        webhook?: {
                            id?: string | null;
                            name?: string | null;
                            avatar?: string | null;
                            url?: string | null;
                        } | null;
                    }> | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/social-account/create-portal-link': {
        post: {
            req: SocialAccountCreatePortalLinkData;
            res: {
                /**
                 * 200
                 */
                200: {
                    url: string;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/upload/': {
        get: {
            req: UploadGetListData;
            res: {
                /**
                 * 200
                 */
                200: Array<{
                    id: string;
                    teamId: string;
                    expiresAt?: string | null;
                    iconUrl?: string | null;
                    thumbnailUrl?: string | null;
                    url?: string | null;
                    iconPath?: string | null;
                    thumbnailPath?: string | null;
                    path?: string | null;
                    type: 'image' | 'video';
                    width?: number | null;
                    height?: number | null;
                    fileSize?: number | null;
                    videoLength?: number | null;
                    mime?: string | null;
                    ext?: string | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    posts: Array<{
                        postId: string;
                        uploadId: string;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    }>;
                }>;
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        post: {
            req: UploadCreateData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    expiresAt?: string | null;
                    iconUrl?: string | null;
                    thumbnailUrl?: string | null;
                    url?: string | null;
                    iconPath?: string | null;
                    thumbnailPath?: string | null;
                    path?: string | null;
                    type: 'image' | 'video';
                    width?: number | null;
                    height?: number | null;
                    fileSize?: number | null;
                    videoLength?: number | null;
                    mime?: string | null;
                    ext?: string | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        delete: {
            req: UploadDeleteManyData;
            res: {
                /**
                 * 200
                 */
                200: Array<{
                    id: string;
                    teamId: string;
                    expiresAt?: string | null;
                    iconUrl?: string | null;
                    thumbnailUrl?: string | null;
                    url?: string | null;
                    iconPath?: string | null;
                    thumbnailPath?: string | null;
                    path?: string | null;
                    type: 'image' | 'video';
                    width?: number | null;
                    height?: number | null;
                    fileSize?: number | null;
                    videoLength?: number | null;
                    mime?: string | null;
                    ext?: string | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                }>;
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/upload/{id}': {
        get: {
            req: UploadGetData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    expiresAt?: string | null;
                    iconUrl?: string | null;
                    thumbnailUrl?: string | null;
                    url?: string | null;
                    iconPath?: string | null;
                    thumbnailPath?: string | null;
                    path?: string | null;
                    type: 'image' | 'video';
                    width?: number | null;
                    height?: number | null;
                    fileSize?: number | null;
                    videoLength?: number | null;
                    mime?: string | null;
                    ext?: string | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        delete: {
            req: UploadDeleteData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    expiresAt?: string | null;
                    iconUrl?: string | null;
                    thumbnailUrl?: string | null;
                    url?: string | null;
                    iconPath?: string | null;
                    thumbnailPath?: string | null;
                    path?: string | null;
                    type: 'image' | 'video';
                    width?: number | null;
                    height?: number | null;
                    fileSize?: number | null;
                    videoLength?: number | null;
                    mime?: string | null;
                    ext?: string | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/post/{id}': {
        get: {
            req: PostGetData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    title: string;
                    postDate: string | null;
                    postedDate?: string | null;
                    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                    data: {
                        TWITTER?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        PINTEREST?: {
                            text?: string | null;
                            description?: string | null;
                            boardName: string;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The URL to which the Pin will link to.
                             */
                            link?: string | null;
                            /**
                             * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                             */
                            altText?: string | null;
                            /**
                             * A note about the Pin. This is not visible to the public.
                             */
                            note?: string | null;
                            /**
                             * The dominant color of the image. This is used to display the image before it's loaded.
                             */
                            dominantColor?: string | null;
                        } | null;
                        FACEBOOK?: {
                            type?: 'POST' | 'REEL' | 'STORY';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        INSTAGRAM?: {
                            type?: 'POST' | 'REEL' | 'STORY';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        THREADS?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        TIKTOK?: {
                            type?: 'VIDEO' | 'IMAGE';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                            /**
                             * Set to true if the video is a paid partnership to promote a third-party business.
                             */
                            isBrandContent?: boolean | null;
                            /**
                             * Set to true if this video is promoting the creator's own business.
                             */
                            isOrganicBrandContent?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make comments on this post.
                             */
                            disableComments?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                             */
                            disableDuet?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make Duets using this post.
                             */
                            disableStitch?: boolean | null;
                            /**
                             * Choose a frame of the published video as the cover photo in ms
                             */
                            thumbnailOffset?: number | null;
                            /**
                             * Set to true if this video is AI generated.
                             */
                            isAiGenerated?: boolean | null;
                        } | null;
                        LINKEDIN?: {
                            text: string;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                            /**
                             * Set to true if the post shouldn't be displayed in the main feed.
                             */
                            hideFromFeed?: boolean | null;
                            /**
                             * Set to true if the post is not allowed to be reshared.
                             */
                            disableReshare?: boolean | null;
                        } | null;
                        YOUTUBE?: {
                            type?: 'VIDEO' | 'SHORT';
                            uploadIds?: Array<(string)> | null;
                            text?: string | null;
                            description?: string | null;
                            privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                            /**
                             * Set to true if the video is made for kids.
                             */
                            madeForKids?: boolean | null;
                        } | null;
                        REDDIT?: {
                            /**
                             * Subreddit name. Example: r/subredditName or u/username
                             */
                            sr: string;
                            text: string;
                            description?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The URL to which the post will link to.
                             */
                            link?: string | null;
                            /**
                             * Set to true if the post is NSFW.
                             */
                            nsfw?: boolean | null;
                        } | null;
                        DISCORD?: {
                            channelId: string;
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The username to display as the author of the message.
                             */
                            username?: string | null;
                            /**
                             * Avatar url to display as the author of the message.
                             */
                            avatarUrl?: string | null;
                        } | null;
                        SLACK?: {
                            channelId: string;
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The username to display as the author of the message.
                             */
                            username?: string | null;
                            /**
                             * Avatar url to display as the author of the message.
                             */
                            avatarUrl?: string | null;
                        } | null;
                        MASTODON?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                            spoiler?: string | null;
                        } | null;
                    };
                    error?: string | null;
                    errors?: {
                        TWITTER?: string | null;
                        PINTEREST?: string | null;
                        FACEBOOK?: string | null;
                        INSTAGRAM?: string | null;
                        TIKTOK?: string | null;
                        LINKEDIN?: string | null;
                        REDDIT?: string | null;
                        DISCORD?: string | null;
                        SLACK?: string | null;
                        YOUTUBE?: string | null;
                        MASTODON?: string | null;
                        THREADS?: string | null;
                    } | null;
                    externalData?: {
                        TWITTER?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        PINTEREST?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        FACEBOOK?: {
                            id?: string | null;
                            postId?: string | null;
                            videoId?: string | null;
                            permalink?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        TIKTOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        LINKEDIN?: {
                            id?: string | null;
                            activity?: string | null;
                            permalink?: string | null;
                        } | null;
                        REDDIT?: {
                            id?: string | null;
                            permalink?: string | null;
                            subreddit_name?: string | null;
                        } | null;
                        DISCORD?: {
                            id?: string | null;
                            permalink?: string | null;
                            channelId?: string | null;
                        } | null;
                        SLACK?: {
                            id?: string | null;
                            permalink?: string | null;
                            channelId?: string | null;
                        } | null;
                        YOUTUBE?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        MASTODON?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        THREADS?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                    uploads: Array<{
                        postId: string;
                        uploadId: string;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                        upload: {
                            id: string;
                            teamId: string;
                            expiresAt?: string | null;
                            iconUrl?: string | null;
                            thumbnailUrl?: string | null;
                            url?: string | null;
                            iconPath?: string | null;
                            thumbnailPath?: string | null;
                            path?: string | null;
                            type: 'image' | 'video';
                            width?: number | null;
                            height?: number | null;
                            fileSize?: number | null;
                            videoLength?: number | null;
                            mime?: string | null;
                            ext?: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                        };
                    }>;
                    socialAccounts: Array<{
                        postId: string;
                        socialAccountId: string;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                        socialAccount: {
                            id: string;
                            type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                            teamId: string;
                            username?: string | null;
                            displayName?: string | null;
                            externalId?: string | null;
                            userUsername?: string | null;
                            userDisplayName?: string | null;
                            userId?: string | null;
                            channels?: Array<{
                                id: string;
                                name?: string | null;
                                username?: string | null;
                                webhook?: {
                                    id?: string | null;
                                    name?: string | null;
                                    avatar?: string | null;
                                    url?: string | null;
                                } | null;
                            }> | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            deletedAt?: string | null;
                        };
                    }>;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        patch: {
            req: PostUpdateData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    title: string;
                    postDate: string | null;
                    postedDate?: string | null;
                    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                    data: {
                        TWITTER?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        PINTEREST?: {
                            text?: string | null;
                            description?: string | null;
                            boardName: string;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The URL to which the Pin will link to.
                             */
                            link?: string | null;
                            /**
                             * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                             */
                            altText?: string | null;
                            /**
                             * A note about the Pin. This is not visible to the public.
                             */
                            note?: string | null;
                            /**
                             * The dominant color of the image. This is used to display the image before it's loaded.
                             */
                            dominantColor?: string | null;
                        } | null;
                        FACEBOOK?: {
                            type?: 'POST' | 'REEL' | 'STORY';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        INSTAGRAM?: {
                            type?: 'POST' | 'REEL' | 'STORY';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        THREADS?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        TIKTOK?: {
                            type?: 'VIDEO' | 'IMAGE';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                            /**
                             * Set to true if the video is a paid partnership to promote a third-party business.
                             */
                            isBrandContent?: boolean | null;
                            /**
                             * Set to true if this video is promoting the creator's own business.
                             */
                            isOrganicBrandContent?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make comments on this post.
                             */
                            disableComments?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                             */
                            disableDuet?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make Duets using this post.
                             */
                            disableStitch?: boolean | null;
                            /**
                             * Choose a frame of the published video as the cover photo in ms
                             */
                            thumbnailOffset?: number | null;
                            /**
                             * Set to true if this video is AI generated.
                             */
                            isAiGenerated?: boolean | null;
                        } | null;
                        LINKEDIN?: {
                            text: string;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                            /**
                             * Set to true if the post shouldn't be displayed in the main feed.
                             */
                            hideFromFeed?: boolean | null;
                            /**
                             * Set to true if the post is not allowed to be reshared.
                             */
                            disableReshare?: boolean | null;
                        } | null;
                        YOUTUBE?: {
                            type?: 'VIDEO' | 'SHORT';
                            uploadIds?: Array<(string)> | null;
                            text?: string | null;
                            description?: string | null;
                            privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                            /**
                             * Set to true if the video is made for kids.
                             */
                            madeForKids?: boolean | null;
                        } | null;
                        REDDIT?: {
                            /**
                             * Subreddit name. Example: r/subredditName or u/username
                             */
                            sr: string;
                            text: string;
                            description?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The URL to which the post will link to.
                             */
                            link?: string | null;
                            /**
                             * Set to true if the post is NSFW.
                             */
                            nsfw?: boolean | null;
                        } | null;
                        DISCORD?: {
                            channelId: string;
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The username to display as the author of the message.
                             */
                            username?: string | null;
                            /**
                             * Avatar url to display as the author of the message.
                             */
                            avatarUrl?: string | null;
                        } | null;
                        SLACK?: {
                            channelId: string;
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The username to display as the author of the message.
                             */
                            username?: string | null;
                            /**
                             * Avatar url to display as the author of the message.
                             */
                            avatarUrl?: string | null;
                        } | null;
                        MASTODON?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                            spoiler?: string | null;
                        } | null;
                    };
                    error?: string | null;
                    errors?: {
                        TWITTER?: string | null;
                        PINTEREST?: string | null;
                        FACEBOOK?: string | null;
                        INSTAGRAM?: string | null;
                        TIKTOK?: string | null;
                        LINKEDIN?: string | null;
                        REDDIT?: string | null;
                        DISCORD?: string | null;
                        SLACK?: string | null;
                        YOUTUBE?: string | null;
                        MASTODON?: string | null;
                        THREADS?: string | null;
                    } | null;
                    externalData?: {
                        TWITTER?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        PINTEREST?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        FACEBOOK?: {
                            id?: string | null;
                            postId?: string | null;
                            videoId?: string | null;
                            permalink?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        TIKTOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        LINKEDIN?: {
                            id?: string | null;
                            activity?: string | null;
                            permalink?: string | null;
                        } | null;
                        REDDIT?: {
                            id?: string | null;
                            permalink?: string | null;
                            subreddit_name?: string | null;
                        } | null;
                        DISCORD?: {
                            id?: string | null;
                            permalink?: string | null;
                            channelId?: string | null;
                        } | null;
                        SLACK?: {
                            id?: string | null;
                            permalink?: string | null;
                            channelId?: string | null;
                        } | null;
                        YOUTUBE?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        MASTODON?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        THREADS?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        delete: {
            req: PostDeleteData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    title: string;
                    postDate: string | null;
                    postedDate?: string | null;
                    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                    data: {
                        TWITTER?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        PINTEREST?: {
                            text?: string | null;
                            description?: string | null;
                            boardName: string;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The URL to which the Pin will link to.
                             */
                            link?: string | null;
                            /**
                             * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                             */
                            altText?: string | null;
                            /**
                             * A note about the Pin. This is not visible to the public.
                             */
                            note?: string | null;
                            /**
                             * The dominant color of the image. This is used to display the image before it's loaded.
                             */
                            dominantColor?: string | null;
                        } | null;
                        FACEBOOK?: {
                            type?: 'POST' | 'REEL' | 'STORY';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        INSTAGRAM?: {
                            type?: 'POST' | 'REEL' | 'STORY';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        THREADS?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        TIKTOK?: {
                            type?: 'VIDEO' | 'IMAGE';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                            /**
                             * Set to true if the video is a paid partnership to promote a third-party business.
                             */
                            isBrandContent?: boolean | null;
                            /**
                             * Set to true if this video is promoting the creator's own business.
                             */
                            isOrganicBrandContent?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make comments on this post.
                             */
                            disableComments?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                             */
                            disableDuet?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make Duets using this post.
                             */
                            disableStitch?: boolean | null;
                            /**
                             * Choose a frame of the published video as the cover photo in ms
                             */
                            thumbnailOffset?: number | null;
                            /**
                             * Set to true if this video is AI generated.
                             */
                            isAiGenerated?: boolean | null;
                        } | null;
                        LINKEDIN?: {
                            text: string;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                            /**
                             * Set to true if the post shouldn't be displayed in the main feed.
                             */
                            hideFromFeed?: boolean | null;
                            /**
                             * Set to true if the post is not allowed to be reshared.
                             */
                            disableReshare?: boolean | null;
                        } | null;
                        YOUTUBE?: {
                            type?: 'VIDEO' | 'SHORT';
                            uploadIds?: Array<(string)> | null;
                            text?: string | null;
                            description?: string | null;
                            privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                            /**
                             * Set to true if the video is made for kids.
                             */
                            madeForKids?: boolean | null;
                        } | null;
                        REDDIT?: {
                            /**
                             * Subreddit name. Example: r/subredditName or u/username
                             */
                            sr: string;
                            text: string;
                            description?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The URL to which the post will link to.
                             */
                            link?: string | null;
                            /**
                             * Set to true if the post is NSFW.
                             */
                            nsfw?: boolean | null;
                        } | null;
                        DISCORD?: {
                            channelId: string;
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The username to display as the author of the message.
                             */
                            username?: string | null;
                            /**
                             * Avatar url to display as the author of the message.
                             */
                            avatarUrl?: string | null;
                        } | null;
                        SLACK?: {
                            channelId: string;
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The username to display as the author of the message.
                             */
                            username?: string | null;
                            /**
                             * Avatar url to display as the author of the message.
                             */
                            avatarUrl?: string | null;
                        } | null;
                        MASTODON?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                            spoiler?: string | null;
                        } | null;
                    };
                    error?: string | null;
                    errors?: {
                        TWITTER?: string | null;
                        PINTEREST?: string | null;
                        FACEBOOK?: string | null;
                        INSTAGRAM?: string | null;
                        TIKTOK?: string | null;
                        LINKEDIN?: string | null;
                        REDDIT?: string | null;
                        DISCORD?: string | null;
                        SLACK?: string | null;
                        YOUTUBE?: string | null;
                        MASTODON?: string | null;
                        THREADS?: string | null;
                    } | null;
                    externalData?: {
                        TWITTER?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        PINTEREST?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        FACEBOOK?: {
                            id?: string | null;
                            postId?: string | null;
                            videoId?: string | null;
                            permalink?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        TIKTOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        LINKEDIN?: {
                            id?: string | null;
                            activity?: string | null;
                            permalink?: string | null;
                        } | null;
                        REDDIT?: {
                            id?: string | null;
                            permalink?: string | null;
                            subreddit_name?: string | null;
                        } | null;
                        DISCORD?: {
                            id?: string | null;
                            permalink?: string | null;
                            channelId?: string | null;
                        } | null;
                        SLACK?: {
                            id?: string | null;
                            permalink?: string | null;
                            channelId?: string | null;
                        } | null;
                        YOUTUBE?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        MASTODON?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        THREADS?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/post/': {
        get: {
            req: PostGetListData;
            res: {
                /**
                 * 200
                 */
                200: {
                    items: Array<{
                        id: string;
                        teamId: string;
                        title: string;
                        postDate: string | null;
                        postedDate?: string | null;
                        status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                        data: {
                            TWITTER?: {
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                            } | null;
                            PINTEREST?: {
                                text?: string | null;
                                description?: string | null;
                                boardName: string;
                                uploadIds?: Array<(string)> | null;
                                /**
                                 * The URL to which the Pin will link to.
                                 */
                                link?: string | null;
                                /**
                                 * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                                 */
                                altText?: string | null;
                                /**
                                 * A note about the Pin. This is not visible to the public.
                                 */
                                note?: string | null;
                                /**
                                 * The dominant color of the image. This is used to display the image before it's loaded.
                                 */
                                dominantColor?: string | null;
                            } | null;
                            FACEBOOK?: {
                                type?: 'POST' | 'REEL' | 'STORY';
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                            } | null;
                            INSTAGRAM?: {
                                type?: 'POST' | 'REEL' | 'STORY';
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                            } | null;
                            THREADS?: {
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                            } | null;
                            TIKTOK?: {
                                type?: 'VIDEO' | 'IMAGE';
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                                privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                                /**
                                 * Set to true if the video is a paid partnership to promote a third-party business.
                                 */
                                isBrandContent?: boolean | null;
                                /**
                                 * Set to true if this video is promoting the creator's own business.
                                 */
                                isOrganicBrandContent?: boolean | null;
                                /**
                                 * If set to true, other TikTok users will not be allowed to make comments on this post.
                                 */
                                disableComments?: boolean | null;
                                /**
                                 * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                                 */
                                disableDuet?: boolean | null;
                                /**
                                 * If set to true, other TikTok users will not be allowed to make Duets using this post.
                                 */
                                disableStitch?: boolean | null;
                                /**
                                 * Choose a frame of the published video as the cover photo in ms
                                 */
                                thumbnailOffset?: number | null;
                                /**
                                 * Set to true if this video is AI generated.
                                 */
                                isAiGenerated?: boolean | null;
                            } | null;
                            LINKEDIN?: {
                                text: string;
                                uploadIds?: Array<(string)> | null;
                                privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                                /**
                                 * Set to true if the post shouldn't be displayed in the main feed.
                                 */
                                hideFromFeed?: boolean | null;
                                /**
                                 * Set to true if the post is not allowed to be reshared.
                                 */
                                disableReshare?: boolean | null;
                            } | null;
                            YOUTUBE?: {
                                type?: 'VIDEO' | 'SHORT';
                                uploadIds?: Array<(string)> | null;
                                text?: string | null;
                                description?: string | null;
                                privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                                /**
                                 * Set to true if the video is made for kids.
                                 */
                                madeForKids?: boolean | null;
                            } | null;
                            REDDIT?: {
                                /**
                                 * Subreddit name. Example: r/subredditName or u/username
                                 */
                                sr: string;
                                text: string;
                                description?: string | null;
                                uploadIds?: Array<(string)> | null;
                                /**
                                 * The URL to which the post will link to.
                                 */
                                link?: string | null;
                                /**
                                 * Set to true if the post is NSFW.
                                 */
                                nsfw?: boolean | null;
                            } | null;
                            DISCORD?: {
                                channelId: string;
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                                /**
                                 * The username to display as the author of the message.
                                 */
                                username?: string | null;
                                /**
                                 * Avatar url to display as the author of the message.
                                 */
                                avatarUrl?: string | null;
                            } | null;
                            SLACK?: {
                                channelId: string;
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                                /**
                                 * The username to display as the author of the message.
                                 */
                                username?: string | null;
                                /**
                                 * Avatar url to display as the author of the message.
                                 */
                                avatarUrl?: string | null;
                            } | null;
                            MASTODON?: {
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                                privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                                spoiler?: string | null;
                            } | null;
                        };
                        error?: string | null;
                        errors?: {
                            TWITTER?: string | null;
                            PINTEREST?: string | null;
                            FACEBOOK?: string | null;
                            INSTAGRAM?: string | null;
                            TIKTOK?: string | null;
                            LINKEDIN?: string | null;
                            REDDIT?: string | null;
                            DISCORD?: string | null;
                            SLACK?: string | null;
                            YOUTUBE?: string | null;
                            MASTODON?: string | null;
                            THREADS?: string | null;
                        } | null;
                        externalData?: {
                            TWITTER?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            PINTEREST?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            FACEBOOK?: {
                                id?: string | null;
                                postId?: string | null;
                                videoId?: string | null;
                                permalink?: string | null;
                            } | null;
                            INSTAGRAM?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            TIKTOK?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            LINKEDIN?: {
                                id?: string | null;
                                activity?: string | null;
                                permalink?: string | null;
                            } | null;
                            REDDIT?: {
                                id?: string | null;
                                permalink?: string | null;
                                subreddit_name?: string | null;
                            } | null;
                            DISCORD?: {
                                id?: string | null;
                                permalink?: string | null;
                                channelId?: string | null;
                            } | null;
                            SLACK?: {
                                id?: string | null;
                                permalink?: string | null;
                                channelId?: string | null;
                            } | null;
                            YOUTUBE?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            MASTODON?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            THREADS?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                        } | null;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                        uploads: Array<{
                            postId: string;
                            uploadId: string;
                            createdAt: string | null;
                            updatedAt: string | null;
                            deletedAt?: string | null;
                            upload: {
                                id: string;
                                teamId: string;
                                expiresAt?: string | null;
                                iconUrl?: string | null;
                                thumbnailUrl?: string | null;
                                url?: string | null;
                                iconPath?: string | null;
                                thumbnailPath?: string | null;
                                path?: string | null;
                                type: 'image' | 'video';
                                width?: number | null;
                                height?: number | null;
                                fileSize?: number | null;
                                videoLength?: number | null;
                                mime?: string | null;
                                ext?: string | null;
                                createdAt: string | null;
                                updatedAt: string | null;
                            };
                        }>;
                        socialAccounts: Array<{
                            postId: string;
                            socialAccountId: string;
                            createdAt: string | null;
                            updatedAt: string | null;
                            deletedAt?: string | null;
                            socialAccount: {
                                id: string;
                                type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                                teamId: string;
                                username?: string | null;
                                displayName?: string | null;
                                externalId?: string | null;
                                userUsername?: string | null;
                                userDisplayName?: string | null;
                                userId?: string | null;
                                channels?: Array<{
                                    id: string;
                                    name?: string | null;
                                    username?: string | null;
                                    webhook?: {
                                        id?: string | null;
                                        name?: string | null;
                                        avatar?: string | null;
                                        url?: string | null;
                                    } | null;
                                }> | null;
                                createdAt: string | null;
                                updatedAt: string | null;
                                deletedAt?: string | null;
                            };
                        }>;
                    }>;
                    total: number;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        post: {
            req: PostCreateData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    title: string;
                    postDate: string | null;
                    postedDate?: string | null;
                    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                    data: {
                        TWITTER?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        PINTEREST?: {
                            text?: string | null;
                            description?: string | null;
                            boardName: string;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The URL to which the Pin will link to.
                             */
                            link?: string | null;
                            /**
                             * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                             */
                            altText?: string | null;
                            /**
                             * A note about the Pin. This is not visible to the public.
                             */
                            note?: string | null;
                            /**
                             * The dominant color of the image. This is used to display the image before it's loaded.
                             */
                            dominantColor?: string | null;
                        } | null;
                        FACEBOOK?: {
                            type?: 'POST' | 'REEL' | 'STORY';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        INSTAGRAM?: {
                            type?: 'POST' | 'REEL' | 'STORY';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        THREADS?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                        } | null;
                        TIKTOK?: {
                            type?: 'VIDEO' | 'IMAGE';
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                            /**
                             * Set to true if the video is a paid partnership to promote a third-party business.
                             */
                            isBrandContent?: boolean | null;
                            /**
                             * Set to true if this video is promoting the creator's own business.
                             */
                            isOrganicBrandContent?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make comments on this post.
                             */
                            disableComments?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                             */
                            disableDuet?: boolean | null;
                            /**
                             * If set to true, other TikTok users will not be allowed to make Duets using this post.
                             */
                            disableStitch?: boolean | null;
                            /**
                             * Choose a frame of the published video as the cover photo in ms
                             */
                            thumbnailOffset?: number | null;
                            /**
                             * Set to true if this video is AI generated.
                             */
                            isAiGenerated?: boolean | null;
                        } | null;
                        LINKEDIN?: {
                            text: string;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                            /**
                             * Set to true if the post shouldn't be displayed in the main feed.
                             */
                            hideFromFeed?: boolean | null;
                            /**
                             * Set to true if the post is not allowed to be reshared.
                             */
                            disableReshare?: boolean | null;
                        } | null;
                        YOUTUBE?: {
                            type?: 'VIDEO' | 'SHORT';
                            uploadIds?: Array<(string)> | null;
                            text?: string | null;
                            description?: string | null;
                            privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                            /**
                             * Set to true if the video is made for kids.
                             */
                            madeForKids?: boolean | null;
                        } | null;
                        REDDIT?: {
                            /**
                             * Subreddit name. Example: r/subredditName or u/username
                             */
                            sr: string;
                            text: string;
                            description?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The URL to which the post will link to.
                             */
                            link?: string | null;
                            /**
                             * Set to true if the post is NSFW.
                             */
                            nsfw?: boolean | null;
                        } | null;
                        DISCORD?: {
                            channelId: string;
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The username to display as the author of the message.
                             */
                            username?: string | null;
                            /**
                             * Avatar url to display as the author of the message.
                             */
                            avatarUrl?: string | null;
                        } | null;
                        SLACK?: {
                            channelId: string;
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            /**
                             * The username to display as the author of the message.
                             */
                            username?: string | null;
                            /**
                             * Avatar url to display as the author of the message.
                             */
                            avatarUrl?: string | null;
                        } | null;
                        MASTODON?: {
                            text?: string | null;
                            uploadIds?: Array<(string)> | null;
                            privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                            spoiler?: string | null;
                        } | null;
                    };
                    error?: string | null;
                    errors?: {
                        TWITTER?: string | null;
                        PINTEREST?: string | null;
                        FACEBOOK?: string | null;
                        INSTAGRAM?: string | null;
                        TIKTOK?: string | null;
                        LINKEDIN?: string | null;
                        REDDIT?: string | null;
                        DISCORD?: string | null;
                        SLACK?: string | null;
                        YOUTUBE?: string | null;
                        MASTODON?: string | null;
                        THREADS?: string | null;
                    } | null;
                    externalData?: {
                        TWITTER?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        PINTEREST?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        FACEBOOK?: {
                            id?: string | null;
                            postId?: string | null;
                            videoId?: string | null;
                            permalink?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        TIKTOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        LINKEDIN?: {
                            id?: string | null;
                            activity?: string | null;
                            permalink?: string | null;
                        } | null;
                        REDDIT?: {
                            id?: string | null;
                            permalink?: string | null;
                            subreddit_name?: string | null;
                        } | null;
                        DISCORD?: {
                            id?: string | null;
                            permalink?: string | null;
                            channelId?: string | null;
                        } | null;
                        SLACK?: {
                            id?: string | null;
                            permalink?: string | null;
                            channelId?: string | null;
                        } | null;
                        YOUTUBE?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        MASTODON?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        THREADS?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/analytics/profile': {
        get: {
            req: AnalyticsGetProfileAnalyticsData;
            res: {
                /**
                 * 200
                 */
                200: Array<{
                    id: string;
                    socialAccountId: string;
                    impressions: number;
                    impressionsUnique: number;
                    views: number;
                    viewsUnique: number;
                    likes: number;
                    comments: number;
                    postCount: number;
                    followers: number;
                    following: number;
                    raw?: unknown;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                }>;
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/analytics/profile-post': {
        get: {
            req: AnalyticsGetProfilePostsData;
            res: {
                /**
                 * 200
                 */
                200: Array<{
                    id: string;
                    socialAccountId: string;
                    postId?: string | null;
                    externalId?: string | null;
                    title?: string | null;
                    description?: string | null;
                    smallThumbnail?: string | null;
                    thumbnail?: string | null;
                    permalink?: string | null;
                    subreddit?: string | null;
                    publishedAt?: string | null;
                    type: 'POST' | 'REEL' | 'STORY' | 'VIDEO' | 'IMAGE';
                    init: boolean;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                }>;
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/analytics/profile-post/{id}': {
        get: {
            req: AnalyticsGetProfilePostData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    socialAccountId: string;
                    postId?: string | null;
                    externalId?: string | null;
                    title?: string | null;
                    description?: string | null;
                    smallThumbnail?: string | null;
                    thumbnail?: string | null;
                    permalink?: string | null;
                    subreddit?: string | null;
                    publishedAt?: string | null;
                    type: 'POST' | 'REEL' | 'STORY' | 'VIDEO' | 'IMAGE';
                    init: boolean;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                    analytics: Array<{
                        id: string;
                        profilePostId: string;
                        impressions: number;
                        impressionsUnique: number;
                        views: number;
                        viewsUnique: number;
                        likes: number;
                        dislikes: number;
                        comments: number;
                        shares: number;
                        saves: number;
                        raw?: unknown;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    }>;
                    socialAccount: {
                        id: string;
                        type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                        teamId: string;
                        username?: string | null;
                        displayName?: string | null;
                        externalId?: string | null;
                        userUsername?: string | null;
                        userDisplayName?: string | null;
                        userId?: string | null;
                        channels?: Array<{
                            id: string;
                            name?: string | null;
                            username?: string | null;
                            webhook?: {
                                id?: string | null;
                                name?: string | null;
                                avatar?: string | null;
                                url?: string | null;
                            } | null;
                        }> | null;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    };
                    post?: {
                        id: string;
                        teamId: string;
                        title: string;
                        postDate: string | null;
                        postedDate?: string | null;
                        status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                        data: {
                            TWITTER?: {
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                            } | null;
                            PINTEREST?: {
                                text?: string | null;
                                description?: string | null;
                                boardName: string;
                                uploadIds?: Array<(string)> | null;
                                /**
                                 * The URL to which the Pin will link to.
                                 */
                                link?: string | null;
                                /**
                                 * The alt text for the image. This is used by screen readers and when the image can't be loaded.
                                 */
                                altText?: string | null;
                                /**
                                 * A note about the Pin. This is not visible to the public.
                                 */
                                note?: string | null;
                                /**
                                 * The dominant color of the image. This is used to display the image before it's loaded.
                                 */
                                dominantColor?: string | null;
                            } | null;
                            FACEBOOK?: {
                                type?: 'POST' | 'REEL' | 'STORY';
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                            } | null;
                            INSTAGRAM?: {
                                type?: 'POST' | 'REEL' | 'STORY';
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                            } | null;
                            THREADS?: {
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                            } | null;
                            TIKTOK?: {
                                type?: 'VIDEO' | 'IMAGE';
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                                privacy?: 'SELF_ONLY' | 'PUBLIC_TO_EVERYONE' | 'MUTUAL_FOLLOW_FRIENDS' | 'FOLLOWER_OF_CREATOR' | null;
                                /**
                                 * Set to true if the video is a paid partnership to promote a third-party business.
                                 */
                                isBrandContent?: boolean | null;
                                /**
                                 * Set to true if this video is promoting the creator's own business.
                                 */
                                isOrganicBrandContent?: boolean | null;
                                /**
                                 * If set to true, other TikTok users will not be allowed to make comments on this post.
                                 */
                                disableComments?: boolean | null;
                                /**
                                 * If set to true, other TikTok users will not be allowed to make Stitches using this post.
                                 */
                                disableDuet?: boolean | null;
                                /**
                                 * If set to true, other TikTok users will not be allowed to make Duets using this post.
                                 */
                                disableStitch?: boolean | null;
                                /**
                                 * Choose a frame of the published video as the cover photo in ms
                                 */
                                thumbnailOffset?: number | null;
                                /**
                                 * Set to true if this video is AI generated.
                                 */
                                isAiGenerated?: boolean | null;
                            } | null;
                            LINKEDIN?: {
                                text: string;
                                uploadIds?: Array<(string)> | null;
                                privacy?: 'CONNECTIONS' | 'PUBLIC' | 'LOGGED_IN' | 'CONTAINER' | null;
                                /**
                                 * Set to true if the post shouldn't be displayed in the main feed.
                                 */
                                hideFromFeed?: boolean | null;
                                /**
                                 * Set to true if the post is not allowed to be reshared.
                                 */
                                disableReshare?: boolean | null;
                            } | null;
                            YOUTUBE?: {
                                type?: 'VIDEO' | 'SHORT';
                                uploadIds?: Array<(string)> | null;
                                text?: string | null;
                                description?: string | null;
                                privacy?: 'PRIVATE' | 'PUBLIC' | 'UNLISTED' | null;
                                /**
                                 * Set to true if the video is made for kids.
                                 */
                                madeForKids?: boolean | null;
                            } | null;
                            REDDIT?: {
                                /**
                                 * Subreddit name. Example: r/subredditName or u/username
                                 */
                                sr: string;
                                text: string;
                                description?: string | null;
                                uploadIds?: Array<(string)> | null;
                                /**
                                 * The URL to which the post will link to.
                                 */
                                link?: string | null;
                                /**
                                 * Set to true if the post is NSFW.
                                 */
                                nsfw?: boolean | null;
                            } | null;
                            DISCORD?: {
                                channelId: string;
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                                /**
                                 * The username to display as the author of the message.
                                 */
                                username?: string | null;
                                /**
                                 * Avatar url to display as the author of the message.
                                 */
                                avatarUrl?: string | null;
                            } | null;
                            SLACK?: {
                                channelId: string;
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                                /**
                                 * The username to display as the author of the message.
                                 */
                                username?: string | null;
                                /**
                                 * Avatar url to display as the author of the message.
                                 */
                                avatarUrl?: string | null;
                            } | null;
                            MASTODON?: {
                                text?: string | null;
                                uploadIds?: Array<(string)> | null;
                                privacy?: 'PUBLIC' | 'UNLISTED' | 'PRIVATE' | 'DIRECT' | null;
                                spoiler?: string | null;
                            } | null;
                        };
                        error?: string | null;
                        errors?: {
                            TWITTER?: string | null;
                            PINTEREST?: string | null;
                            FACEBOOK?: string | null;
                            INSTAGRAM?: string | null;
                            TIKTOK?: string | null;
                            LINKEDIN?: string | null;
                            REDDIT?: string | null;
                            DISCORD?: string | null;
                            SLACK?: string | null;
                            YOUTUBE?: string | null;
                            MASTODON?: string | null;
                            THREADS?: string | null;
                        } | null;
                        externalData?: {
                            TWITTER?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            PINTEREST?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            FACEBOOK?: {
                                id?: string | null;
                                postId?: string | null;
                                videoId?: string | null;
                                permalink?: string | null;
                            } | null;
                            INSTAGRAM?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            TIKTOK?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            LINKEDIN?: {
                                id?: string | null;
                                activity?: string | null;
                                permalink?: string | null;
                            } | null;
                            REDDIT?: {
                                id?: string | null;
                                permalink?: string | null;
                                subreddit_name?: string | null;
                            } | null;
                            DISCORD?: {
                                id?: string | null;
                                permalink?: string | null;
                                channelId?: string | null;
                            } | null;
                            SLACK?: {
                                id?: string | null;
                                permalink?: string | null;
                                channelId?: string | null;
                            } | null;
                            YOUTUBE?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            MASTODON?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            THREADS?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                        } | null;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                        profilePosts: Array<{
                            id: string;
                            socialAccountId: string;
                            postId?: string | null;
                            externalId?: string | null;
                            title?: string | null;
                            description?: string | null;
                            smallThumbnail?: string | null;
                            thumbnail?: string | null;
                            permalink?: string | null;
                            subreddit?: string | null;
                            publishedAt?: string | null;
                            type: 'POST' | 'REEL' | 'STORY' | 'VIDEO' | 'IMAGE';
                            init: boolean;
                            createdAt: string | null;
                            updatedAt: string | null;
                            deletedAt?: string | null;
                            socialAccount: {
                                id: string;
                                type: 'TIKTOK' | 'YOUTUBE' | 'INSTAGRAM' | 'FACEBOOK' | 'TWITTER' | 'THREADS' | 'LINKEDIN' | 'PINTEREST' | 'REDDIT' | 'MASTODON' | 'DISCORD' | 'SLACK';
                                teamId: string;
                                username?: string | null;
                                displayName?: string | null;
                                externalId?: string | null;
                                userUsername?: string | null;
                                userDisplayName?: string | null;
                                userId?: string | null;
                                channels?: Array<{
                                    id: string;
                                    name?: string | null;
                                    username?: string | null;
                                    webhook?: {
                                        id?: string | null;
                                        name?: string | null;
                                        avatar?: string | null;
                                        url?: string | null;
                                    } | null;
                                }> | null;
                                createdAt: string | null;
                                updatedAt: string | null;
                                deletedAt?: string | null;
                            };
                        }>;
                    } | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/comment/{id}': {
        get: {
            req: CommentGetData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    internalPostId: string;
                    internalParentCommentId?: string | null;
                    text: string;
                    postDate: string | null;
                    postedDate?: string | null;
                    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                    data: {
                        FACEBOOK?: {
                            text?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            text?: string | null;
                        } | null;
                        THREADS?: {
                            text?: string | null;
                        } | null;
                        TIKTOK?: {
                            text?: string | null;
                        } | null;
                        LINKEDIN?: {
                            text: string;
                        } | null;
                        YOUTUBE?: {
                            text?: string | null;
                        } | null;
                        REDDIT?: {
                            text: string;
                        } | null;
                        MASTODON?: {
                            text?: string | null;
                        } | null;
                        DISCORD?: {
                            text?: string | null;
                        } | null;
                        SLACK?: {
                            text?: string | null;
                        } | null;
                    };
                    error?: string | null;
                    errors?: {
                        FACEBOOK?: string | null;
                        INSTAGRAM?: string | null;
                        TIKTOK?: string | null;
                        LINKEDIN?: string | null;
                        REDDIT?: string | null;
                        YOUTUBE?: string | null;
                        MASTODON?: string | null;
                        THREADS?: string | null;
                        DISCORD?: string | null;
                        SLACK?: string | null;
                    } | null;
                    externalData?: {
                        FACEBOOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        TIKTOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        LINKEDIN?: {
                            id?: string | null;
                            commentUrn?: string | null;
                            permalink?: string | null;
                        } | null;
                        REDDIT?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        YOUTUBE?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        MASTODON?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        THREADS?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        DISCORD?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        SLACK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        patch: {
            req: CommentUpdateData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    internalPostId: string;
                    internalParentCommentId?: string | null;
                    text: string;
                    postDate: string | null;
                    postedDate?: string | null;
                    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                    data: {
                        FACEBOOK?: {
                            text?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            text?: string | null;
                        } | null;
                        THREADS?: {
                            text?: string | null;
                        } | null;
                        TIKTOK?: {
                            text?: string | null;
                        } | null;
                        LINKEDIN?: {
                            text: string;
                        } | null;
                        YOUTUBE?: {
                            text?: string | null;
                        } | null;
                        REDDIT?: {
                            text: string;
                        } | null;
                        MASTODON?: {
                            text?: string | null;
                        } | null;
                        DISCORD?: {
                            text?: string | null;
                        } | null;
                        SLACK?: {
                            text?: string | null;
                        } | null;
                    };
                    error?: string | null;
                    errors?: {
                        FACEBOOK?: string | null;
                        INSTAGRAM?: string | null;
                        TIKTOK?: string | null;
                        LINKEDIN?: string | null;
                        REDDIT?: string | null;
                        YOUTUBE?: string | null;
                        MASTODON?: string | null;
                        THREADS?: string | null;
                        DISCORD?: string | null;
                        SLACK?: string | null;
                    } | null;
                    externalData?: {
                        FACEBOOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        TIKTOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        LINKEDIN?: {
                            id?: string | null;
                            commentUrn?: string | null;
                            permalink?: string | null;
                        } | null;
                        REDDIT?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        YOUTUBE?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        MASTODON?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        THREADS?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        DISCORD?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        SLACK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        delete: {
            req: CommentDeleteData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    internalPostId: string;
                    internalParentCommentId?: string | null;
                    text: string;
                    postDate: string | null;
                    postedDate?: string | null;
                    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                    data: {
                        FACEBOOK?: {
                            text?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            text?: string | null;
                        } | null;
                        THREADS?: {
                            text?: string | null;
                        } | null;
                        TIKTOK?: {
                            text?: string | null;
                        } | null;
                        LINKEDIN?: {
                            text: string;
                        } | null;
                        YOUTUBE?: {
                            text?: string | null;
                        } | null;
                        REDDIT?: {
                            text: string;
                        } | null;
                        MASTODON?: {
                            text?: string | null;
                        } | null;
                        DISCORD?: {
                            text?: string | null;
                        } | null;
                        SLACK?: {
                            text?: string | null;
                        } | null;
                    };
                    error?: string | null;
                    errors?: {
                        FACEBOOK?: string | null;
                        INSTAGRAM?: string | null;
                        TIKTOK?: string | null;
                        LINKEDIN?: string | null;
                        REDDIT?: string | null;
                        YOUTUBE?: string | null;
                        MASTODON?: string | null;
                        THREADS?: string | null;
                        DISCORD?: string | null;
                        SLACK?: string | null;
                    } | null;
                    externalData?: {
                        FACEBOOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        TIKTOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        LINKEDIN?: {
                            id?: string | null;
                            commentUrn?: string | null;
                            permalink?: string | null;
                        } | null;
                        REDDIT?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        YOUTUBE?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        MASTODON?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        THREADS?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        DISCORD?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        SLACK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
    '/api/v1/comment/': {
        get: {
            req: CommentGetListData;
            res: {
                /**
                 * 200
                 */
                200: {
                    items: Array<{
                        id: string;
                        teamId: string;
                        internalPostId: string;
                        internalParentCommentId?: string | null;
                        text: string;
                        postDate: string | null;
                        postedDate?: string | null;
                        status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                        data: {
                            FACEBOOK?: {
                                text?: string | null;
                            } | null;
                            INSTAGRAM?: {
                                text?: string | null;
                            } | null;
                            THREADS?: {
                                text?: string | null;
                            } | null;
                            TIKTOK?: {
                                text?: string | null;
                            } | null;
                            LINKEDIN?: {
                                text: string;
                            } | null;
                            YOUTUBE?: {
                                text?: string | null;
                            } | null;
                            REDDIT?: {
                                text: string;
                            } | null;
                            MASTODON?: {
                                text?: string | null;
                            } | null;
                            DISCORD?: {
                                text?: string | null;
                            } | null;
                            SLACK?: {
                                text?: string | null;
                            } | null;
                        };
                        error?: string | null;
                        errors?: {
                            FACEBOOK?: string | null;
                            INSTAGRAM?: string | null;
                            TIKTOK?: string | null;
                            LINKEDIN?: string | null;
                            REDDIT?: string | null;
                            YOUTUBE?: string | null;
                            MASTODON?: string | null;
                            THREADS?: string | null;
                            DISCORD?: string | null;
                            SLACK?: string | null;
                        } | null;
                        externalData?: {
                            FACEBOOK?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            INSTAGRAM?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            TIKTOK?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            LINKEDIN?: {
                                id?: string | null;
                                commentUrn?: string | null;
                                permalink?: string | null;
                            } | null;
                            REDDIT?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            YOUTUBE?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            MASTODON?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            THREADS?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            DISCORD?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                            SLACK?: {
                                id?: string | null;
                                permalink?: string | null;
                            } | null;
                        } | null;
                        createdAt: string | null;
                        updatedAt: string | null;
                        deletedAt?: string | null;
                    }>;
                    total: number;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
        post: {
            req: CommentCreateData;
            res: {
                /**
                 * 200
                 */
                200: {
                    id: string;
                    teamId: string;
                    internalPostId: string;
                    internalParentCommentId?: string | null;
                    text: string;
                    postDate: string | null;
                    postedDate?: string | null;
                    status: 'DRAFT' | 'SCHEDULED' | 'POSTED' | 'ERROR' | 'DELETED' | 'PROCESSING';
                    data: {
                        FACEBOOK?: {
                            text?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            text?: string | null;
                        } | null;
                        THREADS?: {
                            text?: string | null;
                        } | null;
                        TIKTOK?: {
                            text?: string | null;
                        } | null;
                        LINKEDIN?: {
                            text: string;
                        } | null;
                        YOUTUBE?: {
                            text?: string | null;
                        } | null;
                        REDDIT?: {
                            text: string;
                        } | null;
                        MASTODON?: {
                            text?: string | null;
                        } | null;
                        DISCORD?: {
                            text?: string | null;
                        } | null;
                        SLACK?: {
                            text?: string | null;
                        } | null;
                    };
                    error?: string | null;
                    errors?: {
                        FACEBOOK?: string | null;
                        INSTAGRAM?: string | null;
                        TIKTOK?: string | null;
                        LINKEDIN?: string | null;
                        REDDIT?: string | null;
                        YOUTUBE?: string | null;
                        MASTODON?: string | null;
                        THREADS?: string | null;
                        DISCORD?: string | null;
                        SLACK?: string | null;
                    } | null;
                    externalData?: {
                        FACEBOOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        INSTAGRAM?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        TIKTOK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        LINKEDIN?: {
                            id?: string | null;
                            commentUrn?: string | null;
                            permalink?: string | null;
                        } | null;
                        REDDIT?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        YOUTUBE?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        MASTODON?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        THREADS?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        DISCORD?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                        SLACK?: {
                            id?: string | null;
                            permalink?: string | null;
                        } | null;
                    } | null;
                    createdAt: string | null;
                    updatedAt: string | null;
                    deletedAt?: string | null;
                };
                /**
                 * 400
                 */
                400: {
                    message: string;
                    issues?: Array<{
                        message: string;
                        path?: Array<(string | number)> | null;
                    }> | null;
                };
                /**
                 * 401
                 */
                401: {
                    message: string;
                };
                /**
                 * 403
                 */
                403: {
                    message: string;
                };
                /**
                 * 404
                 */
                404: {
                    message: string;
                };
                /**
                 * 429
                 */
                429: {
                    message: string;
                };
                /**
                 * 500
                 */
                500: {
                    message: string;
                };
            };
        };
    };
};